<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>Hello World</title>
    <url>/posts/hello-world/</url>
    <content><![CDATA[<p>摘要内容……</p>
<span id="more"></span>
<p>以下为隐藏内容</p>
<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>
]]></content>
  </entry>
  <entry>
    <title>一个函数秒杀 2Sum 3Sum 4Sum 问题</title>
    <url>/posts/2df4ba17/</url>
    <content><![CDATA[<h1 id="一个函数秒杀-2Sum-3Sum-4Sum-问题"><a href="#一个函数秒杀-2Sum-3Sum-4Sum-问题" class="headerlink" title="一个函数秒杀 2Sum 3Sum 4Sum 问题"></a>一个函数秒杀 2Sum 3Sum 4Sum 问题</h1><p>经常刷 LeetCode 的读者肯定知道鼎鼎有名的 <code>twoSum</code> 问题，我们的旧文 <a href="http://mp.weixin.qq.com/s?__biz=MzAxODQxMDM0Mw==&mid=2247484474&idx=1&sn=dfbadbe6e17d695a1907e2adcd9f0d3c&chksm=9bd7fa32aca0732406829a6d1de34b7e3144af239cc25e014f5349d73cea952d5f2b0473345a&scene=21#wechat_redirect">Two Sum 问题的核心思想</a> 对 <code>twoSum</code> 的几个变种做了解析。</p>
<p>但是除了 <code>twoSum</code> 问题，LeetCode 上面还有 <code>3Sum</code>，<code>4Sum</code> 问题，我估计以后出个 <code>5Sum</code>，<code>6Sum</code> 也不是不可能。</p>
<p>那么，对于这种问题有没有什么好办法用套路解决呢？本文就由浅入深，层层推进，用一个函数来解决所有 <code>nSum</code> 类型的问题。</p>
<h2 id="一、twoSum-问题"><a href="#一、twoSum-问题" class="headerlink" title="一、twoSum 问题"></a>一、twoSum 问题</h2><p>[leetcode1](<a href="https://leetcode-cn.com/problems/two-sum/">1. 两数之和 - 力扣（LeetCode） (leetcode-cn.com)</a>)</p>
<p>力扣上的 twoSum 问题，题目要求返回的是索引，这里我来编一道 twoSum 题目，不要返回索引，返回元素的值：</p>
<p>如果假设输入一个数组 <code>nums</code> 和一个目标和 <code>target</code>，<strong>请你返回 <code>nums</code> 中能够凑出 <code>target</code> 的两个元素的值</strong>，比如输入 <code>nums = [5,3,1,6], target = 9</code>，那么算法返回两个元素 <code>[3,6]</code>。可以假设只有且仅有一对儿元素可以凑出 <code>target</code>。</p>
<p>我们可以先对 <code>nums</code> 排序，然后利用前文「<a href="http://mp.weixin.qq.com/s?__biz=MzAxODQxMDM0Mw==&mid=2247484505&idx=1&sn=0e9517f7c4021df0e6146c6b2b0c4aba&chksm=9bd7fa51aca07347009c591c403b3228f41617806429e738165bd58d60220bf8f15f92ff8a2e&scene=21#wechat_redirect">双指针技巧汇总</a>」写过的左右双指针技巧，从两端相向而行就行了：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">vector&lt;<span class="type">int</span>&gt; <span class="title function_">twoSum</span><span class="params">(vector&lt;<span class="type">int</span>&gt;&amp; nums, <span class="type">int</span> target)</span> &#123;</span><br><span class="line">    <span class="comment">// 先对数组排序</span></span><br><span class="line">    sort(nums.begin(), nums.end());</span><br><span class="line">    <span class="comment">// 左右指针</span></span><br><span class="line">    <span class="type">int</span> <span class="variable">lo</span> <span class="operator">=</span> <span class="number">0</span>, hi = nums.size() - <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">while</span> (lo &lt; hi) &#123;</span><br><span class="line">        <span class="type">int</span> <span class="variable">sum</span> <span class="operator">=</span> nums[lo] + nums[hi];</span><br><span class="line">        <span class="comment">// 根据 sum 和 target 的比较，移动左右指针</span></span><br><span class="line">        <span class="keyword">if</span> (sum &lt; target) &#123;</span><br><span class="line">            lo++;</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (sum &gt; target) &#123;</span><br><span class="line">            hi--;</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (sum == target) &#123;</span><br><span class="line">            <span class="keyword">return</span> &#123;nums[lo], nums[hi]&#125;;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> &#123;&#125;;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>这样就可以解决这个问题，不过我们要继续魔改题目，把这个题目变得更泛化，更困难一点：</p>
<p><strong><code>nums</code> 中可能有多对儿元素之和都等于 <code>target</code>，请你的算法返回所有和为 <code>target</code> 的元素对儿，其中不能出现重复</strong>。</p>
<p>函数签名如下：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">vector&lt;vector&lt;<span class="type">int</span>&gt;&gt; <span class="title function_">twoSumTarget</span><span class="params">(vector&lt;<span class="type">int</span>&gt;&amp; nums, <span class="type">int</span> target)</span>;</span><br></pre></td></tr></table></figure>

<p>比如说输入为 <code>nums = [1,3,1,2,2,3], target = 4</code>，那么算法返回的结果就是：<code>[[1,3],[2,2]]</code>。</p>
<p>对于修改后的问题，关键难点是现在可能有多个和为 <code>target</code> 的数对儿，还不能重复，比如上述例子中 <code>[1,3]</code> 和 <code>[3,1]</code> 就算重复，只能算一次。</p>
<p>首先，基本思路肯定还是排序加双指针：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">vector&lt;vector&lt;<span class="type">int</span>&gt;&gt; <span class="title function_">twoSumTarget</span><span class="params">(vector&lt;<span class="type">int</span>&gt;&amp; nums, <span class="type">int</span> target &#123;</span></span><br><span class="line"><span class="params">    // 先对数组排序</span></span><br><span class="line"><span class="params">    sort(nums.begin()</span>, nums.end());</span><br><span class="line">    vector&lt;vector&lt;<span class="type">int</span>&gt;&gt; res;</span><br><span class="line">    <span class="type">int</span> <span class="variable">lo</span> <span class="operator">=</span> <span class="number">0</span>, hi = nums.size() - <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">while</span> (lo &lt; hi) &#123;</span><br><span class="line">        <span class="type">int</span> <span class="variable">sum</span> <span class="operator">=</span> nums[lo] + nums[hi];</span><br><span class="line">        <span class="comment">// 根据 sum 和 target 的比较，移动左右指针</span></span><br><span class="line">        <span class="keyword">if</span>      (sum &lt; target) lo++;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (sum &gt; target) hi--;</span><br><span class="line">        <span class="keyword">else</span> &#123;</span><br><span class="line">            res.push_back(&#123;lo, hi&#125;);</span><br><span class="line">            lo++; hi--;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>但是，这样实现会造成重复的结果，比如说 <code>nums = [1,1,1,2,2,3,3], target = 4</code>，得到的结果中 <code>[1,3]</code> 肯定会重复。</p>
<p>出问题的地方在于 <code>sum == target</code> 条件的 if 分支，当给 <code>res</code> 加入一次结果后，<code>lo</code> 和 <code>hi</code> 不应该改变 1 的同时，还应该跳过所有重复的元素：</p>
<p><img src="https://cdn.jsdelivr.net/gh/swimminghao/picture@main/img/EQzz7o_20210427105202.png" alt="图片"></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">while</span> (lo &lt; hi) &#123;</span><br><span class="line">    <span class="type">int</span> <span class="variable">sum</span> <span class="operator">=</span> nums[lo] + nums[hi];</span><br><span class="line">    <span class="comment">// 记录索引 lo 和 hi 最初对应的值</span></span><br><span class="line">    <span class="type">int</span> <span class="variable">left</span> <span class="operator">=</span> nums[lo], right = nums[hi];</span><br><span class="line">    <span class="keyword">if</span> (sum &lt; target)      lo++;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (sum &gt; target) hi--;</span><br><span class="line">    <span class="keyword">else</span> &#123;</span><br><span class="line">        res.push_back(&#123;left, right&#125;);</span><br><span class="line">        <span class="comment">// 跳过所有重复的元素</span></span><br><span class="line">        <span class="keyword">while</span> (lo &lt; hi &amp;&amp; nums[lo] == left) lo++;</span><br><span class="line">        <span class="keyword">while</span> (lo &lt; hi &amp;&amp; nums[hi] == right) hi--;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>这样就可以保证一个答案只被添加一次，重复的结果都会被跳过，可以得到正确的答案。不过，受这个思路的启发，其实前两个 if 分支也是可以做一点效率优化，跳过相同的元素：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">vector&lt;vector&lt;<span class="type">int</span>&gt;&gt; <span class="title function_">twoSumTarget</span><span class="params">(vector&lt;<span class="type">int</span>&gt;&amp; nums, <span class="type">int</span> target)</span> &#123;</span><br><span class="line">    <span class="comment">// nums 数组必须有序</span></span><br><span class="line">    sort(nums.begin(), nums.end());</span><br><span class="line">    <span class="type">int</span> <span class="variable">lo</span> <span class="operator">=</span> <span class="number">0</span>, hi = nums.size() - <span class="number">1</span>;</span><br><span class="line">    vector&lt;vector&lt;<span class="type">int</span>&gt;&gt; res;</span><br><span class="line">    <span class="keyword">while</span> (lo &lt; hi) &#123;</span><br><span class="line">        <span class="type">int</span> <span class="variable">sum</span> <span class="operator">=</span> nums[lo] + nums[hi];</span><br><span class="line">        <span class="type">int</span> <span class="variable">left</span> <span class="operator">=</span> nums[lo], right = nums[hi];</span><br><span class="line">        <span class="keyword">if</span> (sum &lt; target) &#123;</span><br><span class="line">            <span class="keyword">while</span> (lo &lt; hi &amp;&amp; nums[lo] == left) lo++;</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (sum &gt; target) &#123;</span><br><span class="line">            <span class="keyword">while</span> (lo &lt; hi &amp;&amp; nums[hi] == right) hi--;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            res.push_back(&#123;left, right&#125;);</span><br><span class="line">            <span class="keyword">while</span> (lo &lt; hi &amp;&amp; nums[lo] == left) lo++;</span><br><span class="line">            <span class="keyword">while</span> (lo &lt; hi &amp;&amp; nums[hi] == right) hi--;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>这样，一个通用化的 <code>twoSum</code> 函数就写出来了，请确保你理解了该算法的逻辑，我们后面解决 <code>3Sum</code> 和 <code>4Sum</code> 的时候会复用这个函数。</p>
<p>这个函数的时间复杂度非常容易看出来，双指针操作的部分虽然有那么多 while 循环，但是时间复杂度还是 <code>O(N)</code>，而排序的时间复杂度是 <code>O(NlogN)</code>，所以这个函数的时间复杂度是 <code>O(NlogN)</code>。</p>
<h3 id="二、3Sum-问题"><a href="#二、3Sum-问题" class="headerlink" title="二、3Sum 问题"></a>二、3Sum 问题</h3><p><a href="https://leetcode-cn.com/problems/3sum/">Leetcode15</a></p>
<p>这是力扣第 15 题「三数之和」：</p>
<p><img src="https://cdn.jsdelivr.net/gh/swimminghao/picture@main/img/MUV5CJ_20210427105255.png" alt="图片"></p>
<p>题目就是让我们找 <code>nums</code> 中和为 0 的三个元素，返回所有可能的三元组（triple），函数签名如下：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">vector&lt;vector&lt;<span class="type">int</span>&gt;&gt; <span class="title function_">threeSum</span><span class="params">(vector&lt;<span class="type">int</span>&gt;&amp; nums)</span>;</span><br></pre></td></tr></table></figure>

<p>这样，我们再泛化一下题目，不要光和为 0 的三元组了，计算和为 <code>target</code> 的三元组吧，同上面的 <code>twoSum</code> 一样，也不允许重复的结果：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">vector&lt;vector&lt;<span class="type">int</span>&gt;&gt; <span class="title function_">threeSum</span><span class="params">(vector&lt;<span class="type">int</span>&gt;&amp; nums)</span> &#123;</span><br><span class="line">    <span class="comment">// 求和为 0 的三元组</span></span><br><span class="line">    <span class="keyword">return</span> threeSumTarget(nums, <span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">vector&lt;vector&lt;<span class="type">int</span>&gt;&gt; <span class="title function_">threeSumTarget</span><span class="params">(vector&lt;<span class="type">int</span>&gt;&amp; nums, <span class="type">int</span> target)</span> &#123;</span><br><span class="line">    <span class="comment">// 输入数组 nums，返回所有和为 target 的三元组</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>这个问题怎么解决呢？<strong>很简单，穷举呗</strong>。现在我们想找和为 <code>target</code> 的三个数字，那么对于第一个数字，可能是什么？<code>nums</code> 中的每一个元素 <code>nums[i]</code> 都有可能！</p>
<p>那么，确定了第一个数字之后，剩下的两个数字可以是什么呢？其实就是和为 <code>target - nums[i]</code> 的两个数字呗，那不就是 <code>twoSum</code> 函数解决的问题么🤔</p>
<p>可以直接写代码了，需要把 <code>twoSum</code> 函数稍作修改即可复用：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/* 从 nums[start] 开始，计算有序数组</span></span><br><span class="line"><span class="comment"> * nums 中所有和为 target 的二元组 */</span></span><br><span class="line">vector&lt;vector&lt;<span class="type">int</span>&gt;&gt; <span class="title function_">twoSumTarget</span><span class="params">(</span></span><br><span class="line"><span class="params">    vector&lt;<span class="type">int</span>&gt;&amp; nums, <span class="type">int</span> start, <span class="type">int</span> target)</span> &#123;</span><br><span class="line">    <span class="comment">// 左指针改为从 start 开始，其他不变</span></span><br><span class="line">    <span class="type">int</span> <span class="variable">lo</span> <span class="operator">=</span> start, hi = nums.size() - <span class="number">1</span>;</span><br><span class="line">    vector&lt;vector&lt;<span class="type">int</span>&gt;&gt; res;</span><br><span class="line">    <span class="keyword">while</span> (lo &lt; hi) &#123;</span><br><span class="line">        ...</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 计算数组 nums 中所有和为 target 的三元组 */</span></span><br><span class="line">vector&lt;vector&lt;<span class="type">int</span>&gt;&gt; <span class="title function_">threeSumTarget</span><span class="params">(vector&lt;<span class="type">int</span>&gt;&amp; nums, <span class="type">int</span> target)</span> &#123;</span><br><span class="line">    <span class="comment">// 数组得排个序</span></span><br><span class="line">    sort(nums.begin(), nums.end());</span><br><span class="line">    <span class="type">int</span> <span class="variable">n</span> <span class="operator">=</span> nums.size();</span><br><span class="line">    vector&lt;vector&lt;<span class="type">int</span>&gt;&gt; res;</span><br><span class="line">    <span class="comment">// 穷举 threeSum 的第一个数</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; n; i++) &#123;</span><br><span class="line">        <span class="comment">// 对 target - nums[i] 计算 twoSum</span></span><br><span class="line">        vector&lt;vector&lt;<span class="type">int</span>&gt;&gt; </span><br><span class="line">            tuples = twoSumTarget(nums, i + <span class="number">1</span>, target - nums[i]);</span><br><span class="line">        <span class="comment">// 如果存在满足条件的二元组，再加上 nums[i] 就是结果三元组</span></span><br><span class="line">        <span class="keyword">for</span> (vector&lt;<span class="type">int</span>&gt;&amp; tuple : tuples) &#123;</span><br><span class="line">            tuple.push_back(nums[i]);</span><br><span class="line">            res.push_back(tuple);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// 跳过第一个数字重复的情况，否则会出现重复结果</span></span><br><span class="line">        <span class="keyword">while</span> (i &lt; n - <span class="number">1</span> &amp;&amp; nums[i] == nums[i + <span class="number">1</span>]) i++;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>需要注意的是，类似 <code>twoSum</code>，<code>3Sum</code> 的结果也可能重复，比如输入是 <code>nums = [1,1,1,2,3], target = 6</code>，结果就会重复。</p>
<p><strong>关键点在于，不能让第一个数重复，至于后面的两个数，我们复用的 <code>twoSum</code> 函数会保证它们不重复</strong>。所以代码中必须用一个 while 循环来保证 <code>3Sum</code> 中第一个元素不重复。</p>
<p>至此，<code>3Sum</code> 问题就解决了，时间复杂度不难算，排序的复杂度为 <code>O(NlogN)</code>，<code>twoSumTarget</code> 函数中的双指针操作为 <code>O(N)</code>，<code>threeSumTarget</code> 函数在 for 循环中调用 <code>twoSumTarget</code> 所以总的时间复杂度就是 <code>O(NlogN + N^2) = O(N^2)</code>。</p>
<h3 id="三、4Sum-问题"><a href="#三、4Sum-问题" class="headerlink" title="三、4Sum 问题"></a>三、4Sum 问题</h3><p><a href="https://leetcode-cn.com/problems/4sum/">Leetcode18</a></p>
<p>这是力扣第 18 题「四数之和」：</p>
<p><img src="https://cdn.jsdelivr.net/gh/swimminghao/picture@main/img/GjaUGB_20210427105438.png" alt="图片"></p>
<p>函数签名如下：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">vector&lt;vector&lt;<span class="type">int</span>&gt;&gt; <span class="title function_">fourSum</span><span class="params">(vector&lt;<span class="type">int</span>&gt;&amp; nums, <span class="type">int</span> target)</span>;</span><br></pre></td></tr></table></figure>

<p>都到这份上了，<code>4Sum</code> 完全就可以用相同的思路：穷举第一个数字，然后调用 <code>3Sum</code> 函数计算剩下三个数，最后组合出和为 <code>target</code> 的四元组。</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">vector&lt;vector&lt;<span class="type">int</span>&gt;&gt; <span class="title function_">fourSum</span><span class="params">(vector&lt;<span class="type">int</span>&gt;&amp; nums, <span class="type">int</span> target)</span> &#123;</span><br><span class="line">    <span class="comment">// 数组需要排序</span></span><br><span class="line">    sort(nums.begin(), nums.end());</span><br><span class="line">    <span class="type">int</span> <span class="variable">n</span> <span class="operator">=</span> nums.size();</span><br><span class="line">    vector&lt;vector&lt;<span class="type">int</span>&gt;&gt; res;</span><br><span class="line">    <span class="comment">// 穷举 fourSum 的第一个数</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; n; i++) &#123;</span><br><span class="line">        <span class="comment">// 对 target - nums[i] 计算 threeSum</span></span><br><span class="line">        vector&lt;vector&lt;<span class="type">int</span>&gt;&gt; </span><br><span class="line">            triples = threeSumTarget(nums, i + <span class="number">1</span>, target - nums[i]);</span><br><span class="line">        <span class="comment">// 如果存在满足条件的三元组，再加上 nums[i] 就是结果四元组</span></span><br><span class="line">        <span class="keyword">for</span> (vector&lt;<span class="type">int</span>&gt;&amp; triple : triples) &#123;</span><br><span class="line">            triple.push_back(nums[i]);</span><br><span class="line">            res.push_back(triple);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// fourSum 的第一个数不能重复</span></span><br><span class="line">        <span class="keyword">while</span> (i &lt; n - <span class="number">1</span> &amp;&amp; nums[i] == nums[i + <span class="number">1</span>]) i++;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 从 nums[start] 开始，计算有序数组</span></span><br><span class="line"><span class="comment"> * nums 中所有和为 target 的三元组 */</span></span><br><span class="line">vector&lt;vector&lt;<span class="type">int</span>&gt;&gt; </span><br><span class="line">    <span class="title function_">threeSumTarget</span><span class="params">(vector&lt;<span class="type">int</span>&gt;&amp; nums, <span class="type">int</span> start, <span class="type">int</span> target)</span> &#123;</span><br><span class="line">        <span class="type">int</span> <span class="variable">n</span> <span class="operator">=</span> nums.size();</span><br><span class="line">        vector&lt;vector&lt;<span class="type">int</span>&gt;&gt; res;</span><br><span class="line">        <span class="comment">// i 从 start 开始穷举，其他都不变</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> start; i &lt; n; i++) &#123;</span><br><span class="line">            ...</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> res;</span><br></pre></td></tr></table></figure>

<p>这样，按照相同的套路，<code>4Sum</code> 问题就解决了，时间复杂度的分析和之前类似，for 循环中调用了 <code>threeSumTarget</code> 函数，所以总的时间复杂度就是 <code>O(N^3)</code>。</p>
<h3 id="四、100Sum-问题？"><a href="#四、100Sum-问题？" class="headerlink" title="四、100Sum 问题？"></a>四、100Sum 问题？</h3><p>在 LeetCode 上，<code>4Sum</code> 就到头了，<strong>但是回想刚才写 <code>3Sum</code> 和 <code>4Sum</code> 的过程，实际上是遵循相同的模式的</strong>。我相信你只要稍微修改一下 <code>4Sum</code> 的函数就可以复用并解决 <code>5Sum</code> 问题，然后解决 <code>6Sum</code> 问题……</p>
<p>那么，如果我让你求 <code>100Sum</code> 问题，怎么办呢？其实我们可以观察上面这些解法，统一出一个 <code>nSum</code> 函数：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/* 注意：调用这个函数之前一定要先给 nums 排序 */</span></span><br><span class="line">vector&lt;vector&lt;<span class="type">int</span>&gt;&gt; <span class="title function_">nSumTarget</span><span class="params">(</span></span><br><span class="line"><span class="params">    vector&lt;<span class="type">int</span>&gt;&amp; nums, <span class="type">int</span> n, <span class="type">int</span> start, <span class="type">int</span> target)</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="type">int</span> <span class="variable">sz</span> <span class="operator">=</span> nums.size();</span><br><span class="line">    vector&lt;vector&lt;<span class="type">int</span>&gt;&gt; res;</span><br><span class="line">    <span class="comment">// 至少是 2Sum，且数组大小不应该小于 n</span></span><br><span class="line">    <span class="keyword">if</span> (n &lt; <span class="number">2</span> || sz &lt; n) <span class="keyword">return</span> res;</span><br><span class="line">    <span class="comment">// 2Sum 是 base case</span></span><br><span class="line">    <span class="keyword">if</span> (n == <span class="number">2</span>) &#123;</span><br><span class="line">        <span class="comment">// 双指针那一套操作</span></span><br><span class="line">        <span class="type">int</span> <span class="variable">lo</span> <span class="operator">=</span> start, hi = sz - <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">while</span> (lo &lt; hi) &#123;</span><br><span class="line">            <span class="type">int</span> <span class="variable">sum</span> <span class="operator">=</span> nums[lo] + nums[hi];</span><br><span class="line">            <span class="type">int</span> <span class="variable">left</span> <span class="operator">=</span> nums[lo], right = nums[hi];</span><br><span class="line">            <span class="keyword">if</span> (sum &lt; target) &#123;</span><br><span class="line">                <span class="keyword">while</span> (lo &lt; hi &amp;&amp; nums[lo] == left) lo++;</span><br><span class="line">            &#125; <span class="keyword">else</span> <span class="keyword">if</span> (sum &gt; target) &#123;</span><br><span class="line">                <span class="keyword">while</span> (lo &lt; hi &amp;&amp; nums[hi] == right) hi--;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                res.push_back(&#123;left, right&#125;);</span><br><span class="line">                <span class="keyword">while</span> (lo &lt; hi &amp;&amp; nums[lo] == left) lo++;</span><br><span class="line">                <span class="keyword">while</span> (lo &lt; hi &amp;&amp; nums[hi] == right) hi--;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="comment">// n &gt; 2 时，递归计算 (n-1)Sum 的结果</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> start; i &lt; sz; i++) &#123;</span><br><span class="line">            vector&lt;vector&lt;<span class="type">int</span>&gt;&gt; </span><br><span class="line">                sub = nSumTarget(nums, n - <span class="number">1</span>, i + <span class="number">1</span>, target - nums[i]);</span><br><span class="line">            <span class="keyword">for</span> (vector&lt;<span class="type">int</span>&gt;&amp; arr : sub) &#123;</span><br><span class="line">                <span class="comment">// (n-1)Sum 加上 nums[i] 就是 nSum</span></span><br><span class="line">                arr.push_back(nums[i]);</span><br><span class="line">                res.push_back(arr);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">while</span> (i &lt; sz - <span class="number">1</span> &amp;&amp; nums[i] == nums[i + <span class="number">1</span>]) i++;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>嗯，看起来很长，实际上就是把之前的题目解法合并起来了，<code>n == 2</code> 时是 <code>twoSum</code> 的双指针解法，<code>n &gt; 2</code> 时就是穷举第一个数字，然后递归调用计算 <code>(n-1)Sum</code>，组装答案。</p>
<p><strong>需要注意的是，调用这个 <code>nSum</code> 函数之前一定要先给 <code>nums</code> 数组排序</strong>，因为 <code>nSum</code> 是一个递归函数，如果在 <code>nSum</code> 函数里调用排序函数，那么每次递归都会进行没有必要的排序，效率会非常低。</p>
<p>比如说现在我们写 LeetCode 上的 <code>4Sum</code> 问题：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">vector&lt;vector&lt;<span class="type">int</span>&gt;&gt; <span class="title function_">fourSum</span><span class="params">(vector&lt;<span class="type">int</span>&gt;&amp; nums, <span class="type">int</span> target)</span> &#123;</span><br><span class="line">    sort(nums.begin(), nums.end());</span><br><span class="line">    <span class="comment">// n 为 4，从 nums[0] 开始计算和为 target 的四元组</span></span><br><span class="line">    <span class="keyword">return</span> nSumTarget(nums, <span class="number">4</span>, <span class="number">0</span>, target);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>再比如 LeetCode 的 <code>3Sum</code> 问题，找 <code>target == 0</code> 的三元组：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">vector&lt;vector&lt;<span class="type">int</span>&gt;&gt; <span class="title function_">threeSum</span><span class="params">(vector&lt;<span class="type">int</span>&gt;&amp; nums)</span> &#123;</span><br><span class="line">    sort(nums.begin(), nums.end());</span><br><span class="line">    <span class="comment">// n 为 3，从 nums[0] 开始计算和为 0 的三元组</span></span><br><span class="line">    <span class="keyword">return</span> nSumTarget(nums, <span class="number">3</span>, <span class="number">0</span>, <span class="number">0</span>);        </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>那么，如果让你计算 <code>100Sum</code> 问题，直接调用这个函数就完事儿了。</p>
]]></content>
      <categories>
        <category>技术</category>
      </categories>
      <tags>
        <tag>算法</tag>
        <tag>感悟</tag>
      </tags>
  </entry>
  <entry>
    <title>Hexo博客文章加密</title>
    <url>/posts/c30e6297/</url>
    <content><![CDATA[<h1 id="Hexo博客文章加密"><a href="#Hexo博客文章加密" class="headerlink" title="Hexo博客文章加密"></a>Hexo博客文章加密</h1><h4 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h4><p>平时开发过程中遇到的一些问题，我都会整理到文档中。有些感觉不错的，会二次整理成文章发布到我的博客中。但是有些文章如果存在隐私内容，或者不打算公开的话，就不能放在博客中了。</p>
<p>我的博客是使用 <code>Hexo</code> 来搭建的，并不能设置某些文章不可见。但如果不在电脑旁或者出门没有带电脑又想要查看一下之前记录的内容，就很不方便了。</p>
<p>我也尝试在 <code>github</code> 上去找一些可以设置账户的开源的博客框架，但测试过一些后发现并没有符合自己需求的，而自己开发却没有时间。</p>
<p>思来想去，就想看看有没有插件能够实现 <code>Hexo</code> 博客的加密操作。最终让我找到了一款名为 <code>Hexo-Blog-Encrypt</code> 的插件。</p>
<p>为了防止以下的修改可能出现版本差异，这里我先声明我使用的 <code>Hexo</code> 版本信息：</p>
<figure class="highlight apache"><table><tr><td class="code"><pre><span class="line"><span class="attribute">hexo</span>: <span class="number">4</span>.<span class="number">2</span>.<span class="number">1</span></span><br><span class="line"><span class="attribute">hexo</span>-cli: <span class="number">3</span>.<span class="number">1</span>.<span class="number">0</span></span><br><span class="line"><span class="attribute">next</span> theme version: <span class="number">7</span>.<span class="number">8</span>.<span class="number">0</span>+a7a948a</span><br><span class="line"><span class="attribute">hexo</span>-blog-encrypt: <span class="string">&quot;^3.1.6&quot;</span></span><br></pre></td></tr></table></figure>

<hr>
<h4 id="插件安装"><a href="#插件安装" class="headerlink" title="插件安装"></a>插件安装</h4><figure class="highlight ada"><table><tr><td class="code"><pre><span class="line">npm install <span class="comment">--save hexo-blog-encrypt</span></span><br></pre></td></tr></table></figure>

<h4 id="快速使用"><a href="#快速使用" class="headerlink" title="快速使用"></a>快速使用</h4><p>该插件的使用也很方便，这里我仅作简单介绍，详细的可以查看官方文档。 <a href="https://github.com/D0n9X1n/hexo-blog-encrypt">D0n9X1n&#x2F;hexo-blog-encrypt: Yet, just another hexo plugin for security.</a></p>
<p>要为一篇文章添加密码查看功能，只需要在文章信息头部添加 <code>password</code> 字段即可：</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">title:</span> <span class="string">Hello</span> <span class="string">World</span></span><br><span class="line"><span class="attr">date:</span> <span class="number">2021-04-13 21:18:02</span></span><br><span class="line"><span class="attr">password:</span> <span class="string">hello</span></span><br><span class="line"><span class="meta">---</span></span><br></pre></td></tr></table></figure>

<hr>
<h4 id="全局加密配置"><a href="#全局加密配置" class="headerlink" title="全局加密配置"></a>全局加密配置</h4><p>分别为每篇文章设置密码，虽然很灵活，但是配置或者修改起来非常麻烦。为此，可以通过设置统一配置来实现全局加密。</p>
<p>通过添加指定 <code>tag</code> 的方式，可以为所有需要加密的文章添加统一加密操作。只需要在需要加密的文章中，添加设置的 <code>tag值</code> 即可。</p>
<p>在Hexo主配置文件 <code>_config.yml</code> 中添加如下配置：</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Security</span></span><br><span class="line"><span class="attr">encrypt:</span> <span class="comment"># hexo-blog-encrypt</span></span><br><span class="line">  <span class="attr">silent:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">abstract:</span> <span class="string">这是一篇加密文章，需要密码才能继续阅读。</span></span><br><span class="line">  <span class="attr">message:</span> <span class="string">当前文章暂不对外可见，请输入密码后查看！</span></span><br><span class="line">  <span class="attr">tags:</span></span><br><span class="line">  <span class="bullet">-</span> &#123;<span class="attr">name:</span> <span class="string">private</span>, <span class="attr">password:</span> <span class="string">hello</span>&#125;</span><br><span class="line">  <span class="attr">wrong_pass_message:</span> <span class="string">抱歉，您输入的密码错误，请检查后重新输入。</span></span><br><span class="line">  <span class="attr">wrong_hash_message:</span> <span class="string">抱歉,</span> <span class="string">当前文章不能被校验,</span> <span class="string">不过您还是可以看看解密后的内容。</span></span><br></pre></td></tr></table></figure>

<p>之后，需要清除缓存后重新生成 <code>hexo clean &amp;&amp; hexo s -g</code>。</p>
<p>其中的 <code>tag</code> 部分：</p>
<figure class="highlight subunit"><table><tr><td class="code"><pre><span class="line"><span class="keyword">tags:</span></span><br><span class="line">- &#123;name: private, password: hello&#125;</span><br></pre></td></tr></table></figure>

<p>表示当在文章中指定了 <code>private</code> 这个 <code>tag</code> 后，该文章就会自动加密并使用对应的值 <code>hello</code> 作为密码，输入密码后才可查看。</p>
<p>相应的文章头部设置：</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">title:</span> <span class="string">Password</span> <span class="string">Test</span></span><br><span class="line"><span class="attr">date:</span> <span class="number">2019-12-21 11:54:07</span></span><br><span class="line"><span class="attr">tags:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">private</span></span><br><span class="line"><span class="meta">---</span></span><br></pre></td></tr></table></figure>

<h4 id="在全局加密配置下禁用某些文章的加密"><a href="#在全局加密配置下禁用某些文章的加密" class="headerlink" title="在全局加密配置下禁用某些文章的加密"></a>在全局加密配置下禁用某些文章的加密</h4><p>可能有这样的情况，属于 <code>private</code> 标签下的某篇文章在一段时间内想要开放访问。如果在描述中加上密码提示： <code>当前文章密码为xxx，请输入密码后查看</code> ，来让用户每次查看时都要先输入密码后再查看，这样的操作又会给访客带来不便。</p>
<p>这时可以单独设置允许某篇文章不设置密码。</p>
<p>只需要在使用 <code>加密tag</code> 的前提下，结合 <code>password</code> 来实现即可。在博客文章的头部添加 <code>password</code> 并设置为 <code>&quot;&quot;</code> 就能取消当前文章的 <code>Tag</code> 加密。</p>
<p>相应的设置示例如下：</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">title:</span> <span class="literal">No</span> <span class="string">Password</span> <span class="string">Test</span></span><br><span class="line"><span class="attr">date:</span> <span class="number">2019-12-21 11:54:07</span></span><br><span class="line"><span class="attr">tags:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">private</span></span><br><span class="line"><span class="attr">password:</span> <span class="string">&quot;&quot;</span></span><br><span class="line"><span class="meta">---</span></span><br></pre></td></tr></table></figure>

<h4 id="在全局加密配置下设置非全局密码"><a href="#在全局加密配置下设置非全局密码" class="headerlink" title="在全局加密配置下设置非全局密码"></a>在全局加密配置下设置非全局密码</h4><p>在全局加密配置下，我们可以通过设置多个 <code>加密tag</code> 来为多篇不同类型的文章设置相同的查看密码：</p>
<figure class="highlight subunit"><table><tr><td class="code"><pre><span class="line"><span class="keyword">tags:</span></span><br><span class="line">- &#123;name: private, password: hello&#125;</span><br><span class="line">- &#123;name: jiami, password: world&#125;</span><br><span class="line">- &#123;name: 加密, password: jiesuo&#125;</span><br></pre></td></tr></table></figure>

<p>那么可能有这样的场景：</p>
<p>属于 <code>private</code> 标签下的某篇文章想要设置成不一样的密码，防止用户恶意通过一个密码来查看同标签下的所有文章。此时，仍可以通过 <code>password</code> 参数来实现：</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">title:</span> <span class="string">Password</span> <span class="string">Test</span></span><br><span class="line"><span class="attr">date:</span> <span class="number">2019-12-21 11:54:07</span></span><br><span class="line"><span class="attr">tags:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">private</span></span><br><span class="line"><span class="attr">password:</span> <span class="string">&quot;buyiyang&quot;</span></span><br><span class="line"><span class="meta">---</span></span><br></pre></td></tr></table></figure>

<p>说明：</p>
<p>该文章通过tag值 <code>private</code> 做了加密，按说密码应该为 <code>hello</code> ，但是又在信息头中设置了 <code>password</code> ，因为配置的优先级是 <code>文章信息头 &gt; 按标签加密</code>，所以最后的密码为 <code>buyiyang</code> 。</p>
<hr>
<h4 id="解密后目录不显示"><a href="#解密后目录不显示" class="headerlink" title="解密后目录不显示"></a>解密后目录不显示</h4><p>在为某些文章设置了 <strong>加密后查看</strong> 之后，不经意间发现这些文章的目录在解密后却不显示了。</p>
<h4 id="探究原因"><a href="#探究原因" class="headerlink" title="探究原因"></a>探究原因</h4><p>从插件的 <code>github issues</code> 中我找到了相关的讨论：</p>
<ul>
<li><a href="https://github.com/D0n9X1n/hexo-blog-encrypt/issues/16">解密后目录不会更新 · Issue #16 · D0n9X1n&#x2F;hexo-blog-encrypt</a></li>
</ul>
<p>原因：</p>
<blockquote>
<p>加密的时候，<code>post.content</code> 会变成加密后的串，所以原来的 <code>TOC</code> 生成逻辑就会针对加密后的内容。<br>所以这边我只能把原来的内容存进 <code>post.origin</code> 字段。</p>
</blockquote>
<p>找到文件 <code>themes/next/layout/_macro/sidebar.swig</code> ，编辑如下部分：</p>
<p><a href="https://gitee.com/leafney/blogimage/raw/master/blog/20210418165143.png"><img src="https://gitee.com/leafney/blogimage/raw/master/blog/20210418165143.png" alt="20210418165143"></a></p>
<p><a href="https://gitee.com/leafney/blogimage/raw/master/blog/20210418165143.png">20210418165143</a></p>
<p>插件 <code>hexo-blog-encrypt</code> 对文章内容进行加密后，会将原始文章内容保存到字段 <code>origin</code> 中，当生成 <code>TOC</code> 时，我们可以通过 <code>page.origin</code> 来得到原始内容，生成文章目录。</p>
<p>相应的代码为：</p>
<figure class="highlight django"><table><tr><td class="code"><pre><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">aside</span> <span class="attr">class</span>=<span class="string">&quot;sidebar&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;sidebar-inner&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"></span></span><br><span class="line"><span class="language-xml">    </span><span class="template-tag">&#123;%- <span class="name">set</span> display_toc = page.toc.enable and display_toc %&#125;</span><span class="language-xml"></span></span><br><span class="line"><span class="language-xml">    </span><span class="template-tag">&#123;%- <span class="name"><span class="name">if</span></span> display_toc %&#125;</span><span class="language-xml"></span></span><br><span class="line"><span class="language-xml"></span></span><br><span class="line"><span class="language-xml">      </span><span class="template-tag">&#123;%- <span class="name"><span class="name">if</span></span> (page.encrypt) %&#125;</span><span class="language-xml"></span></span><br><span class="line"><span class="language-xml">        </span><span class="template-tag">&#123;%- <span class="name">set</span> toc = toc(page.origin, &#123; class: &quot;nav&quot;, list_number: page.toc.number, max_depth: page.toc.max_depth &#125;) %&#125;</span><span class="language-xml"></span></span><br><span class="line"><span class="language-xml">      </span><span class="template-tag">&#123;%- <span class="name"><span class="name">else</span></span> %&#125;</span><span class="language-xml"></span></span><br><span class="line"><span class="language-xml">        </span><span class="template-tag">&#123;%- <span class="name">set</span> toc = toc(page.content, &#123; class: &quot;nav&quot;, list_number: page.toc.number, max_depth: page.toc.max_depth &#125;) %&#125;</span><span class="language-xml"></span></span><br><span class="line"><span class="language-xml">      </span><span class="template-tag">&#123;%- <span class="name"><span class="name">endif</span></span> %&#125;</span><span class="language-xml"></span></span><br><span class="line"><span class="language-xml"></span></span><br><span class="line"><span class="language-xml">      </span><span class="template-tag">&#123;%- <span class="name">set</span> display_toc = toc.length &gt; 1 and display_toc %&#125;</span><span class="language-xml"></span></span><br><span class="line"><span class="language-xml">    </span><span class="template-tag">&#123;%- <span class="name"><span class="name">endif</span></span> %&#125;</span><span class="language-xml"></span></span><br><span class="line"><span class="language-xml"></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">ul</span> <span class="attr">class</span>=<span class="string">&quot;sidebar-nav motion-element&quot;</span>&gt;</span></span></span><br></pre></td></tr></table></figure>

<p>修改完成后，执行 <code>hexo clean &amp;&amp; hexo s -g</code> 并重新预览。</p>
<p>效果如下：</p>
<p><a href="https://gitee.com/leafney/blogimage/raw/master/blog/20210418165529.png"><img src="https://gitee.com/leafney/blogimage/raw/master/blog/20210418165529.png" alt="20210418165529"></a></p>
<p><a href="https://gitee.com/leafney/blogimage/raw/master/blog/20210418165529.png">20210418165529</a></p>
<p>不过，这样的效果貌似不是我想要的。我理想中的效果应该是：</p>
<ul>
<li>当文章加密后，访客只能看到侧边栏中的 <code>站点概览</code> 部分，不需要看到 <code>文章目录</code> 部分。</li>
<li>当文章解密后，访客则可以看到 <code>站点概览</code> 和 <code>文章目录</code> 两部分。</li>
</ul>
<p>而现在加密后的文章未解密之前也可以看到 <code>文章目录</code> ，虽然该目录不可点击。</p>
<p>当然，如果你不是很介意，那么到这里就可以结束了。如果你和我一样有一些 <strong>追求完美的强迫症</strong> 的话，我们继续。</p>
<h5 id="如何优化"><a href="#如何优化" class="headerlink" title="如何优化"></a>如何优化</h5><p>查看了 <code>hexo-blog-encrypt</code> 相关的 <code>issues</code> ，我找到了一种 <strong>折中</strong> 的解决方法。</p>
<p>从 issue <a href="https://github.com/D0n9X1n/hexo-blog-encrypt/issues/67#issuecomment-463893408">Archer主题解密后TOC依旧不显示（已按手册修改）</a> 中我们可以知道：</p>
<p>我们可以在文章加密的前提下，通过将目录部分加入到一个 <code>不可见的div</code> 中来实现 <code>隐藏目录</code> 的效果。在源码中的 <a href="https://github.com/D0n9X1n/hexo-blog-encrypt/blob/479ccd4cf522adc8f667cfa06290f057a219cb88/lib/hbe.js#L207">hexo-blog-encrypt&#x2F;lib&#x2F;hbe.js</a> 部分我们也可以看到，解密后通过设置 <code>id</code> 值为 <code>toc-div</code> 的元素为 <code>display:inline</code> 来控制显示隐藏。</p>
<figure class="highlight django"><table><tr><td class="code"><pre><span class="line"><span class="template-tag">&#123;%- <span class="name"><span class="name">if</span></span> (page.encrypt) %&#125;</span><span class="language-xml"></span></span><br><span class="line"><span class="language-xml">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;toc-div&quot;</span> <span class="attr">style</span>=<span class="string">&quot;display:none&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"></span><span class="template-tag">&#123;%- <span class="name"><span class="name">else</span></span> %&#125;</span><span class="language-xml"></span></span><br><span class="line"><span class="language-xml">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;toc-div&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"></span><span class="template-tag">&#123;%- <span class="name"><span class="name">endif</span></span> %&#125;</span><span class="language-xml"></span></span><br><span class="line"><span class="language-xml"></span></span><br><span class="line"><span class="language-xml">xxx这里是目录部分xxx</span></span><br><span class="line"><span class="language-xml"></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br></pre></td></tr></table></figure>

<p>对文件 <code>themes/next/layout/_macro/sidebar.swig</code> 修改后的代码如下：</p>
<figure class="highlight django"><table><tr><td class="code"><pre><span class="line"><span class="language-xml"><span class="comment">&lt;!--noindex--&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;post-toc-wrap sidebar-panel&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">  </span><span class="template-tag">&#123;%- <span class="name"><span class="name">if</span></span> (page.encrypt) %&#125;</span><span class="language-xml"></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;toc-div&quot;</span> <span class="attr">style</span>=<span class="string">&quot;display:none&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">  </span><span class="template-tag">&#123;%- <span class="name"><span class="name">else</span></span> %&#125;</span><span class="language-xml"></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;toc-div&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">  </span><span class="template-tag">&#123;%- <span class="name"><span class="name">endif</span></span> %&#125;</span><span class="language-xml"></span></span><br><span class="line"><span class="language-xml"></span></span><br><span class="line"><span class="language-xml">    </span><span class="template-tag">&#123;%- <span class="name"><span class="name">if</span></span> display_toc %&#125;</span><span class="language-xml"></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;post-toc motion-element&quot;</span>&gt;</span></span><span class="template-variable">&#123;&#123; toc &#125;&#125;</span><span class="language-xml"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    </span><span class="template-tag">&#123;%- <span class="name"><span class="name">endif</span></span> %&#125;</span><span class="language-xml"></span></span><br><span class="line"><span class="language-xml">  </span></span><br><span class="line"><span class="language-xml">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="comment">&lt;!--/noindex--&gt;</span></span></span><br></pre></td></tr></table></figure>

<p>但这种方法并不是完全的加密，而是采用 <code>障眼法</code> 的方式，通过查看html源文件还是可以看到目录内容的，只是不显示罢了。</p>
<p>对于这个问题，<code>hexo-blog-encrypt</code> 插件的作者也作了说明：<a href="https://github.com/D0n9X1n/hexo-blog-encrypt/issues/162">next 主题内没有 article.ejs 文件【TOC 相关】 · Issue #162 · D0n9X1n&#x2F;hexo-blog-encrypt</a></p>
<h5 id="只好妥协"><a href="#只好妥协" class="headerlink" title="只好妥协"></a>只好妥协</h5><p>因为该插件中目前只有一个参数 <code>page.encrypt</code> 可以用来判断当前的文章是否进行了 <strong>加密处理</strong> ，而不能获知该文章当前是处于 <strong>加密后的锁定</strong> 状态，还是处于 <strong>加密后的解锁</strong> 状态。如果再有一个参数结合起来一起处理就好了。</p>
<p>所以，目前只能在解锁前隐藏目录，解锁后再显示目录。但在解锁前目录区域还是会展开，只是没有内容显示罢了。</p>
<hr>
<h4 id="让加密文章显示加密提示"><a href="#让加密文章显示加密提示" class="headerlink" title="让加密文章显示加密提示"></a>让加密文章显示加密提示</h4><p>类似于我的博客文章列表中的 <code>文章置顶</code> 的提示效果，考虑在文章列表中对加密的文章增加类似的 <code>加密</code> 提示信息。</p>
<p>上面对于文章的加密处理，一方面是在 <code>配置文件</code> 中添加的 <code>tag</code> 全局配置，另一方面是在单个 <code>md源文件</code> 中添加的 <code>password</code> 参数。所以我们需要对这两种情况分别做处理。</p>
<h5 id="对于password参数的情况"><a href="#对于password参数的情况" class="headerlink" title="对于password参数的情况"></a>对于password参数的情况</h5><p>针对于 <code>password</code> 字段，参考获取其他字段的方法，比如获取标题用 <code>post.title</code> ，获取置顶用 <code>post.top</code> ，那么获取 <code>password</code> 就是 <code>post.password</code> 了。</p>
<p>可以参考我之前添加置顶提示信息的操作，对文件 <code>themes/next/layout/_macro/post.swig</code> 的修改如下：</p>
<figure class="highlight django"><table><tr><td class="code"><pre><span class="line"><span class="comment">&#123;# 加密文章添加提示信息-for password #&#125;</span><span class="language-xml"></span></span><br><span class="line"><span class="language-xml"></span><span class="template-tag">&#123;%- <span class="name"><span class="name">if</span></span> post.password %&#125;</span><span class="language-xml"></span></span><br><span class="line"><span class="language-xml">  <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;post-meta-item&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;post-meta-item-icon&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">          <span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">&quot;fas fa-lock&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;/<span class="name">span</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;post-meta-item-text&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">          <span class="tag">&lt;<span class="name">font</span> <span class="attr">color</span>=<span class="string">&#x27;#FD7E13&#x27;</span>&gt;</span>[加密]<span class="tag">&lt;/<span class="name">font</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;/<span class="name">span</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">  <span class="tag">&lt;/<span class="name">span</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"></span><span class="template-tag">&#123;%- <span class="name"><span class="name">endif</span></span> %&#125;</span></span><br></pre></td></tr></table></figure>

<h5 id="对于tag标签的情况"><a href="#对于tag标签的情况" class="headerlink" title="对于tag标签的情况"></a>对于tag标签的情况</h5><p>针对于 <code>tag</code> 标签的获取，可以从文件 <code>themes/next/layout/_macro/post.swig</code> 中找到类似的处理方法：</p>
<figure class="highlight handlebars"><table><tr><td class="code"><pre><span class="line"><span class="language-xml">&#123;%- for tag in post.tags.toArray() %&#125;</span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;</span></span></span><span class="template-variable">&#123;&#123; <span class="name">url_for</span>(<span class="name">tag.path</span>) &#125;&#125;</span><span class="language-xml"><span class="tag"><span class="string">&quot;</span> <span class="attr">rel</span>=<span class="string">&quot;tag&quot;</span>&gt;</span></span><span class="template-variable">&#123;&#123; <span class="name">tag_indicate</span> &#125;&#125;</span><span class="language-xml"> </span><span class="template-variable">&#123;&#123; <span class="name">tag.name</span> &#125;&#125;</span><span class="language-xml"><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">&#123;%- endfor %&#125;</span></span><br></pre></td></tr></table></figure>

<p>即可以用最简单的 <strong>遍历法</strong> 来处理：</p>
<p>我们获取到配置文件中设置的所有 <code>加密tag值</code> ，再找到文章中的 <code>tag标签</code> 。二者一对比，有匹配的项则说明该文章设置了 <code>tag值</code> 加密。</p>
<h5 id="swig文件"><a href="#swig文件" class="headerlink" title="swig文件"></a>swig文件</h5><p>要在 <code>.swig</code> 文件中实现相应的对比逻辑，就需要了解其使用的语法格式。而对于 <code>swig</code> 文件，使用的是 <code>Swig</code> 语法。</p>
<blockquote>
<p><code>Swig</code> 是一个非常棒的、类似 <code>Django/jinja</code> 的 <code>node.js</code> 模板引擎。</p>
</blockquote>
<p>不过看到这个代码库 <a href="https://github.com/paularmstrong/swig">paularmstrong&#x2F;swig: Take a swig of the best template engine for JavaScript.</a> 已经 <code>归档</code> 了。</p>
<p>但因为 <code>Swig</code> 是类似于 <code>jinja</code> 的模板引擎，那么我们直接去参考 <code>jinja</code> 的语法就可以了。</p>
<ul>
<li><a href="http://docs.jinkan.org/docs/jinja2/templates.html">模板设计者文档 — Jinja2 2.7 documentation</a></li>
</ul>
<h5 id="最终实现"><a href="#最终实现" class="headerlink" title="最终实现"></a>最终实现</h5><p>获取全局配置中 <code>encrypt.tags</code> 的值：</p>
<figure class="highlight django"><table><tr><td class="code"><pre><span class="line"><span class="template-tag">&#123;%- <span class="name"><span class="name">if</span></span> (config.encrypt) and (config.encrypt.tags) %&#125;</span><span class="language-xml"></span></span><br><span class="line"><span class="language-xml">  </span><span class="template-tag">&#123;%- <span class="name"><span class="name">for</span></span> ctag <span class="keyword">in</span> config.encrypt.tags %&#125;</span><span class="language-xml"></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">span</span>&gt;</span></span><span class="template-variable">&#123;&#123; ctag.name &#125;&#125;</span><span class="language-xml"><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">  </span><span class="template-tag">&#123;%- <span class="name"><span class="name">endfor</span></span> %&#125;</span><span class="language-xml"></span></span><br><span class="line"><span class="language-xml"></span><span class="template-tag">&#123;%- <span class="name"><span class="name">endif</span></span> %&#125;</span></span><br></pre></td></tr></table></figure>

<p>在文章列表中获取当前文章包含的 <code>tags</code> 列表：</p>
<figure class="highlight django"><table><tr><td class="code"><pre><span class="line"><span class="template-tag">&#123;%- <span class="name"><span class="name">if</span></span> post.tags %&#125;</span><span class="language-xml"></span></span><br><span class="line"><span class="language-xml">  </span><span class="template-tag">&#123;%- <span class="name"><span class="name">for</span></span> ptag <span class="keyword">in</span> post.tags.toArray() %&#125;</span><span class="language-xml"></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">span</span>&gt;</span></span><span class="template-variable">&#123;&#123; ptag.name &#125;&#125;</span><span class="language-xml"><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">  </span><span class="template-tag">&#123;%- <span class="name"><span class="name">endfor</span></span> %&#125;</span><span class="language-xml"></span></span><br><span class="line"><span class="language-xml"></span><span class="template-tag">&#123;%- <span class="name"><span class="name">endif</span></span> %&#125;</span></span><br></pre></td></tr></table></figure>

<p>对于其中展示的文本格式，可以参考已有的 <code>发表于</code> <code>更新于</code> 这些副标题的格式来实现。</p>
<p>例如：</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;post-meta-item&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;post-meta-item-icon&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">&quot;far fa-calendar&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;post-meta-item-text&quot;</span>&gt;</span>发表于<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">    </span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">time</span> <span class="attr">title</span>=<span class="string">&quot;创建时间：2021-02-28 11:18:43 / 修改时间：11:41:19&quot;</span> <span class="attr">itemprop</span>=<span class="string">&quot;dateCreated datePublished&quot;</span> <span class="attr">datetime</span>=<span class="string">&quot;2021-02-28T11:18:43+08:00&quot;</span>&gt;</span>2021-02-28<span class="tag">&lt;/<span class="name">time</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>对其进行优化，我们只需要显示提示文字，不需要后面的带下划线部分，最终得到的就是：</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;post-meta-item&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;post-meta-item-icon&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">&quot;fas fa-lock&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;post-meta-item-text&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">font</span> <span class="attr">color</span>=<span class="string">&#x27;#FD7E13&#x27;</span>&gt;</span>[加密]<span class="tag">&lt;/<span class="name">font</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>整合上面的代码，对于文章中包含 <code>password</code> 的文档，通过如下方式来显示：</p>
<p><a href="https://gitee.com/leafney/blogimage/raw/master/blog/20210418170147.png"><img src="https://gitee.com/leafney/blogimage/raw/master/blog/20210418170147.png" alt="20210418170147"></a></p>
<p><a href="https://gitee.com/leafney/blogimage/raw/master/blog/20210418170147.png">20210418170147</a></p>
<p>相应代码：</p>
<figure class="highlight django"><table><tr><td class="code"><pre><span class="line"><span class="comment">&#123;# 加密文章添加提示信息-for password #&#125;</span><span class="language-xml"></span></span><br><span class="line"><span class="language-xml"></span><span class="template-tag">&#123;%- <span class="name"><span class="name">if</span></span> post.password %&#125;</span><span class="language-xml"></span></span><br><span class="line"><span class="language-xml">  <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;post-meta-item&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;post-meta-item-icon&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">          <span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">&quot;fas fa-lock&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;/<span class="name">span</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;post-meta-item-text&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">          <span class="tag">&lt;<span class="name">font</span> <span class="attr">color</span>=<span class="string">&#x27;#FD7E13&#x27;</span>&gt;</span>[加密]<span class="tag">&lt;/<span class="name">font</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;/<span class="name">span</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">  <span class="tag">&lt;/<span class="name">span</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"></span><span class="template-tag">&#123;%- <span class="name"><span class="name">endif</span></span> %&#125;</span></span><br></pre></td></tr></table></figure>

<p>对于文章中包含指定加密 <code>tags</code> 的文档，通过如下方式来显示：</p>
<p><a href="https://gitee.com/leafney/blogimage/raw/master/blog/20210418170209.png"><img src="https://gitee.com/leafney/blogimage/raw/master/blog/20210418170209.png" alt="20210418170209"></a></p>
<p><a href="https://gitee.com/leafney/blogimage/raw/master/blog/20210418170209.png">20210418170209</a></p>
<p>相应代码：</p>
<figure class="highlight django"><table><tr><td class="code"><pre><span class="line"><span class="comment">&#123;# 加密文章添加提示信息-for config tags #&#125;</span><span class="language-xml"></span></span><br><span class="line"><span class="language-xml">    // 获取全局配置中的加密tag</span></span><br><span class="line"><span class="language-xml">    </span><span class="template-tag">&#123;%- <span class="name"><span class="name">if</span></span> (config.encrypt) and (config.encrypt.tags) %&#125;</span><span class="language-xml"></span></span><br><span class="line"><span class="language-xml">      </span><span class="template-tag">&#123;%- <span class="name"><span class="name">for</span></span> ctag <span class="keyword">in</span> config.encrypt.tags %&#125;</span><span class="language-xml"></span></span><br><span class="line"><span class="language-xml">        // 判断当前文章中是否包含tags</span></span><br><span class="line"><span class="language-xml">        </span><span class="template-tag">&#123;%- <span class="name"><span class="name">if</span></span> post.tags %&#125;</span><span class="language-xml"></span></span><br><span class="line"><span class="language-xml">          </span><span class="template-tag">&#123;%- <span class="name"><span class="name">for</span></span> ptag <span class="keyword">in</span> post.tags.toArray() %&#125;</span><span class="language-xml"></span></span><br><span class="line"><span class="language-xml">            // 如果有相同的tag值</span></span><br><span class="line"><span class="language-xml">            </span><span class="template-tag">&#123;%- <span class="name"><span class="name">if</span></span> (ctag.name == ptag.name) %&#125;</span><span class="language-xml"></span></span><br><span class="line"><span class="language-xml">              // 显示加密提示信息</span></span><br><span class="line"><span class="language-xml">              <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;post-meta-item&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">                  <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;post-meta-item-icon&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">                      <span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">&quot;fas fa-lock&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">                  <span class="tag">&lt;/<span class="name">span</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">                  <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;post-meta-item-text&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">                      <span class="tag">&lt;<span class="name">font</span> <span class="attr">color</span>=<span class="string">&#x27;#FD7E13&#x27;</span>&gt;</span>[加密]<span class="tag">&lt;/<span class="name">font</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">                  <span class="tag">&lt;/<span class="name">span</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">              <span class="tag">&lt;/<span class="name">span</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"></span></span><br><span class="line"><span class="language-xml">            </span><span class="template-tag">&#123;%- <span class="name"><span class="name">endif</span></span> %&#125;</span><span class="language-xml"></span></span><br><span class="line"><span class="language-xml"></span></span><br><span class="line"><span class="language-xml">          </span><span class="template-tag">&#123;%- <span class="name"><span class="name">endfor</span></span> %&#125;</span><span class="language-xml"></span></span><br><span class="line"><span class="language-xml">        </span><span class="template-tag">&#123;%- <span class="name"><span class="name">endif</span></span> %&#125;</span><span class="language-xml"></span></span><br><span class="line"><span class="language-xml"></span></span><br><span class="line"><span class="language-xml">      </span><span class="template-tag">&#123;%- <span class="name"><span class="name">endfor</span></span> %&#125;</span><span class="language-xml"></span></span><br><span class="line"><span class="language-xml">    </span><span class="template-tag">&#123;%- <span class="name"><span class="name">endif</span></span> %&#125;</span></span><br></pre></td></tr></table></figure>

<p>对于两种都有的文档，我们只需要通过一个 <code>判断</code> 来处理就好了：优先判断文档中的 <code>password</code> 字段。当文档中包含 <code>password</code> 时，就说明是加密文章；否则就去判断配置文件看是否为加密文章。</p>
<p><a href="https://gitee.com/leafney/blogimage/raw/master/blog/20210418170330.png"><img src="https://gitee.com/leafney/blogimage/raw/master/blog/20210418170330.png" alt="20210418170330"></a></p>
<p><a href="https://gitee.com/leafney/blogimage/raw/master/blog/20210418170330.png">20210418170330</a></p>
<p>最后的代码为：</p>
<figure class="highlight django"><table><tr><td class="code"><pre><span class="line"><span class="comment">&#123;# 加密文章添加提示信息-for password #&#125;</span><span class="language-xml"></span></span><br><span class="line"><span class="language-xml"></span><span class="template-tag">&#123;%- <span class="name"><span class="name">if</span></span> post.password %&#125;</span><span class="language-xml"></span></span><br><span class="line"><span class="language-xml">  <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;post-meta-item&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;post-meta-item-icon&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">          <span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">&quot;fas fa-lock&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;/<span class="name">span</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;post-meta-item-text&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">          <span class="tag">&lt;<span class="name">font</span> <span class="attr">color</span>=<span class="string">&#x27;#FD7E13&#x27;</span>&gt;</span>[加密]<span class="tag">&lt;/<span class="name">font</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;/<span class="name">span</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">  <span class="tag">&lt;/<span class="name">span</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"></span><span class="template-tag">&#123;%- <span class="name"><span class="name">else</span></span> %&#125;</span><span class="language-xml"></span></span><br><span class="line"><span class="language-xml">  </span><span class="comment">&#123;# 加密文章添加提示信息-for config tags #&#125;</span><span class="language-xml"></span></span><br><span class="line"><span class="language-xml">  </span><span class="template-tag">&#123;%- <span class="name"><span class="name">if</span></span> (config.encrypt) and (config.encrypt.tags) %&#125;</span><span class="language-xml"></span></span><br><span class="line"><span class="language-xml">    </span><span class="template-tag">&#123;%- <span class="name"><span class="name">for</span></span> ctag <span class="keyword">in</span> config.encrypt.tags %&#125;</span><span class="language-xml"></span></span><br><span class="line"><span class="language-xml">      </span></span><br><span class="line"><span class="language-xml">      </span><span class="template-tag">&#123;%- <span class="name"><span class="name">if</span></span> post.tags %&#125;</span><span class="language-xml"></span></span><br><span class="line"><span class="language-xml">        </span><span class="template-tag">&#123;%- <span class="name"><span class="name">for</span></span> ptag <span class="keyword">in</span> post.tags.toArray() %&#125;</span><span class="language-xml"></span></span><br><span class="line"><span class="language-xml">          </span><span class="template-tag">&#123;%- <span class="name"><span class="name">if</span></span> (ctag.name == ptag.name) %&#125;</span><span class="language-xml"></span></span><br><span class="line"><span class="language-xml">            <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;post-meta-item&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">                <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;post-meta-item-icon&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">                    <span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">&quot;fas fa-lock&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">                <span class="tag">&lt;/<span class="name">span</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">                <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;post-meta-item-text&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">                    <span class="tag">&lt;<span class="name">font</span> <span class="attr">color</span>=<span class="string">&#x27;#FD7E13&#x27;</span>&gt;</span>[加密]<span class="tag">&lt;/<span class="name">font</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">                <span class="tag">&lt;/<span class="name">span</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">            <span class="tag">&lt;/<span class="name">span</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">          </span><span class="template-tag">&#123;%- <span class="name"><span class="name">endif</span></span> %&#125;</span><span class="language-xml"></span></span><br><span class="line"><span class="language-xml">        </span><span class="template-tag">&#123;%- <span class="name"><span class="name">endfor</span></span> %&#125;</span><span class="language-xml"></span></span><br><span class="line"><span class="language-xml">      </span><span class="template-tag">&#123;%- <span class="name"><span class="name">endif</span></span> %&#125;</span><span class="language-xml"></span></span><br><span class="line"><span class="language-xml"></span></span><br><span class="line"><span class="language-xml">    </span><span class="template-tag">&#123;%- <span class="name"><span class="name">endfor</span></span> %&#125;</span><span class="language-xml"></span></span><br><span class="line"><span class="language-xml">  </span><span class="template-tag">&#123;%- <span class="name"><span class="name">endif</span></span> %&#125;</span><span class="language-xml"></span></span><br><span class="line"><span class="language-xml"></span><span class="template-tag">&#123;%- <span class="name"><span class="name">endif</span></span> %&#125;</span></span><br></pre></td></tr></table></figure>

<p>稍微不好的一点就是，上面的操作是通过 <code>两个for循环</code> 来处理的，会导致一些性能问题。不过这个操作是在编译过程 <code>hexo g</code> 的时候来处理的，不影响博客浏览，也就可以忽略了。</p>
<hr>
<h4 id="更换图标"><a href="#更换图标" class="headerlink" title="更换图标"></a>更换图标</h4><p>对于需要显示的图标，可以从网站 <a href="https://fontawesome.com/icons">Icons | Font Awesome</a> 中获取。</p>
<p>例如，我这里选择的是 <code>锁</code> 的icon图标，得到的代码如下：</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">&quot;fas fa-lock&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span></span><br></pre></td></tr></table></figure>

<hr>
]]></content>
  </entry>
  <entry>
    <title>Hexo博客进阶：为 Next 主题添加 Waline 评论系统</title>
    <url>/posts/a07389a8/</url>
    <content><![CDATA[<h1 id="Hexo博客进阶：为-Next-主题添加-Waline-评论系统"><a href="#Hexo博客进阶：为-Next-主题添加-Waline-评论系统" class="headerlink" title="Hexo博客进阶：为 Next 主题添加 Waline 评论系统"></a>Hexo博客进阶：为 Next 主题添加 Waline 评论系统</h1><p> 发表于 2022-01-20 分类于 <a href="https://qianfanguojin.top/categories/Hexo%E5%8D%9A%E5%AE%A2/">Hexo博客</a> 阅读次数： 44 Waline： 本文字数： 2.2k 阅读时长 ≈ 4 分钟</p>
<p>文章发出之后，往往我们想要得到读者更多地反馈，那么拥有一个评论系统是至关重要的。</p>
<p>本篇带大家通过一些简单的配置，在 Hexo Next 主题下添加 Waline 评论系统。</p>
<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>在之前的 <a href="https://qianfanguojin.top/2019/07/23/Hexo%E5%8D%9A%E5%AE%A2%E8%BF%9B%E9%98%B6%EF%BC%9A%E4%B8%BANext%E4%B8%BB%E9%A2%98%E6%B7%BB%E5%8A%A0Valine%E8%AF%84%E8%AE%BA%E7%B3%BB%E7%BB%9F/?highlight=valine">Hexo博客进阶：为Next主题添加Valine评论系统 | 谢同学的博客 (qianfanguojin.top)</a> 文章中，我叙述了如何 在 Next主题下配置 Valine 评论系统。</p>
<p>但是，根据读者反馈，Valine 评论系统在 Next 主题高版本 (7.+) 以上已没有支持，且 Valine 已经很久没有更新维护了。不过，有大佬在 Valine 的基础之上开发了 <a href="https://waline.js.org/">Waline</a> 。<br>这次，我们就来描述如何快速上手安装配置更加人性化且带后端的 <a href="https://waline.js.org/">Waline</a> 评论系统。</p>
<h2 id="1-第一步，配置评论数据库"><a href="#1-第一步，配置评论数据库" class="headerlink" title="1. 第一步，配置评论数据库"></a>1. 第一步，配置评论数据库</h2><p><code>Waline</code> 和 Valine 一样，也是支持基于 <a href="https://leancloud.app/">LeanCloud</a> 作为数据存储的，但是 <code>Waline</code> 支持的部署方式更多：</p>
<table>
<thead>
<tr>
<th></th>
<th>Waline</th>
<th></th>
</tr>
</thead>
<tbody><tr>
<td><strong>Client</strong></td>
<td><strong>Server</strong></td>
<td><strong>Storage</strong></td>
</tr>
<tr>
<td><a href="https://waline.js.org/">@waline&#x2F;client</a></td>
<td><a href="https://vercel.com/">Vercel</a></td>
<td><a href="https://leancloud.app/">LeanCloud</a></td>
</tr>
<tr>
<td><a href="https://minivaline.js.org/">MiniValine</a></td>
<td><a href="https://deta.sh/">Deta</a></td>
<td><a href="https://clodbase.net/">CloudBase</a></td>
</tr>
<tr>
<td><a href="https://github.com/asforest/AprilComment">AprilComment</a></td>
<td><a href="https://cloudbase.net/">CloudBase</a></td>
<td><a href="https://mongodb.com/">MongoDB</a></td>
</tr>
<tr>
<td></td>
<td><a href="https://inspirecloud.com/">InspireCloud</a></td>
<td>MySQL</td>
</tr>
<tr>
<td></td>
<td><a href="https://railway.app/">Railway</a></td>
<td>SQLite</td>
</tr>
<tr>
<td></td>
<td><a href="https://render.com/">Render</a></td>
<td>PostgreSQL</td>
</tr>
<tr>
<td></td>
<td>Docker</td>
<td><a href="https://github.com/">GitHub</a></td>
</tr>
<tr>
<td></td>
<td>Virtual Host</td>
<td><a href="https://docs.deta.sh/docs/base/about">Deta Base</a></td>
</tr>
<tr>
<td></td>
<td></td>
<td><a href="https://inspirecloud.com/docs/nodejs/database/quickstart.html">InspireCloud</a></td>
</tr>
</tbody></table>
<p>为了方便，这里我只讲述最简单，零成本的数据库建立方法。</p>
<p>我们需要注册一个 <a href="https://console.leancloud.app/register">Leancloud 国际版 </a>的账号，注意，一定要是 <strong>国际版</strong>，国内版需要绑定备案的域名，比较麻烦。具体可以在注册时的左上角看到：</p>
<p><a href="https://cdn.jsdelivr.net/gh/qianfanguojin/ImageHosting_1/hexo/202201202316763.png"><img src="https://cdn.jsdelivr.net/gh/qianfanguojin/ImageHosting_1/hexo/202201202316763.png" alt="img"></a></p>
<p>注册完成后，登录，然后我们找到<code>创建应用</code></p>
<p><a href="https://cdn.jsdelivr.net/gh/qianfanguojin/ImageHosting_1/others/20210815161252.png"><img src="https://cdn.jsdelivr.net/gh/qianfanguojin/ImageHosting_1/others/20210815161252.png" alt="img"></a></p>
<p>在这里填写你的应用名称,名称可以自己定义，然后，下面选择<code>开发版</code> 点击<code>创建</code>。</p>
<p>然后点击应用进入设置。</p>
<p><a href="https://cdn.jsdelivr.net/gh/qianfanguojin/ImageHosting_1/others/202108151614201.png"><img src="https://cdn.jsdelivr.net/gh/qianfanguojin/ImageHosting_1/others/202108151614201.png" alt="img"></a></p>
<p>点击应用凭证，取得我们 <code>AppKey</code> 、<code>App id</code> 、以及 <code>MasterKey</code> ：</p>
<p><a href="https://cdn.jsdelivr.net/gh/qianfanguojin/ImageHosting_1/hexo/202201211139993.png"><img src="https://cdn.jsdelivr.net/gh/qianfanguojin/ImageHosting_1/hexo/202201211139993.png" alt="img"></a></p>
<p>数据库配置完毕，接下来安装服务端。</p>
<h2 id="2-安装服务端"><a href="#2-安装服务端" class="headerlink" title="2. 安装服务端"></a>2. 安装服务端</h2><p>由上面的表格可以看到，<code>Waline</code> 支持多种服务端，为了最简便上手，我们使用第一种方式，即在 <code>Vercl</code> 上安装服务端。首先，点击下面的按钮，一键部署：</p>
<p><a href="https://vercel.com/import/project?template=https://github.com/walinejs/waline/tree/main/example"><img src="https://vercel.com/button" alt="Vercel"></a></p>
<p>应该需要注册一个账号，支持使用 <code>Github</code> 账号直接登录：</p>
<p><a href="https://cdn.jsdelivr.net/gh/qianfanguojin/ImageHosting_1/hexo/202201211306146.png"><img src="https://cdn.jsdelivr.net/gh/qianfanguojin/ImageHosting_1/hexo/202201211306146.png" alt="img"></a></p>
<p>登录后重新点进来，点击 <code>Create</code>：</p>
<p><a href="https://cdn.jsdelivr.net/gh/qianfanguojin/ImageHosting_1/hexo/202201211309809.png"><img src="https://cdn.jsdelivr.net/gh/qianfanguojin/ImageHosting_1/hexo/202201211309809.png" alt="img"></a></p>
<p>然后等待下面 <code>Deploy</code> 构建完成，点击 <code>Go to Dashboard</code></p>
<p><a href="https://cdn.jsdelivr.net/gh/qianfanguojin/ImageHosting_1/hexo/202201211313406.png"><img src="https://cdn.jsdelivr.net/gh/qianfanguojin/ImageHosting_1/hexo/202201211313406.png" alt="img"></a></p>
<p>找到 Settings &#x3D;&gt; Environment Variables，配置环境变量：</p>
<p><a href="https://cdn.jsdelivr.net/gh/qianfanguojin/ImageHosting_1/hexo/202201211314501.png"><img src="https://cdn.jsdelivr.net/gh/qianfanguojin/ImageHosting_1/hexo/202201211314501.png" alt="img"></a></p>
<p>我们需要配置三个环境变量，对应如下表：</p>
<table>
<thead>
<tr>
<th>Lean Cloud</th>
<th>Vercel Environment</th>
</tr>
</thead>
<tbody><tr>
<td>AppID</td>
<td>LEAN_ID</td>
</tr>
<tr>
<td>AppKey</td>
<td>LEAN_KEY</td>
</tr>
<tr>
<td>MasterKey</td>
<td>LEAN_MASTER_KEY</td>
</tr>
</tbody></table>
<p><a href="https://cdn.jsdelivr.net/gh/qianfanguojin/ImageHosting_1/hexo/202201211330222.png"><img src="https://cdn.jsdelivr.net/gh/qianfanguojin/ImageHosting_1/hexo/202201211330222.png" alt="img"></a></p>
<blockquote>
<p>提示</p>
<p>如果你使用 LeanCloud 国内版，请额外配置 <code>LEAN_SERVER</code> 环境变量，值为你绑定好的域名。</p>
</blockquote>
<p>为了使环境变量生效，我们需要重新构建一次。在上方找到 Deployments ，选择第一个右边的三个点，点击 Redeploy 。</p>
<p><a href="https://cdn.jsdelivr.net/gh/qianfanguojin/ImageHosting_1/hexo/202201211333672.png"><img src="https://cdn.jsdelivr.net/gh/qianfanguojin/ImageHosting_1/hexo/202201211333672.png" alt="img"></a></p>
<p>等待其构建结束，然后记住 <code>DOMAINS</code> 中的域名地址：</p>
<p><a href="https://cdn.jsdelivr.net/gh/qianfanguojin/ImageHosting_1/hexo/202201211413737.png"><img src="https://cdn.jsdelivr.net/gh/qianfanguojin/ImageHosting_1/hexo/202201211413737.png" alt="img"></a></p>
<p>好了，服务端部署到此结束，下面我们开始在 <code>Hexo Next</code> 主题中配置客户端。</p>
<h2 id="3-在Hexo-Next主题中配置"><a href="#3-在Hexo-Next主题中配置" class="headerlink" title="3. 在Hexo Next主题中配置"></a>3. 在Hexo Next主题中配置</h2><p>由于 Next 主题中并不自带 <code>Waline</code> 的评论配置，我们需要安装官方提供的插件。在 <code>Hexo</code> 根目录执行：</p>
<figure class="highlight autoit"><table><tr><td class="code"><pre><span class="line">npm install <span class="symbol">@waline</span>/hexo-<span class="keyword">next</span></span><br></pre></td></tr></table></figure>

<p>找到 Next 的主题配置文件，在最后加上</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Waline</span></span><br><span class="line"><span class="comment"># For more information: https://waline.js.org, https://github.com/walinejs/waline</span></span><br><span class="line"><span class="attr">waline:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span> <span class="comment">#是否开启</span></span><br><span class="line">  <span class="attr">serverURL:</span> <span class="string">waline-server-pearl.vercel.app</span> <span class="comment"># Waline #服务端地址，我们这里就是上面部署的 Vercel 地址</span></span><br><span class="line">  <span class="attr">placeholder:</span> <span class="string">请文明评论呀</span> <span class="comment"># #评论框的默认文字</span></span><br><span class="line">  <span class="attr">avatar:</span> <span class="string">mm</span> <span class="comment"># 头像风格</span></span><br><span class="line">  <span class="attr">meta:</span> [<span class="string">nick</span>, <span class="string">mail</span>, <span class="string">link</span>] <span class="comment"># 自定义评论框上面的三个输入框的内容</span></span><br><span class="line">  <span class="attr">pageSize:</span> <span class="number">10</span> <span class="comment"># 评论数量多少时显示分页</span></span><br><span class="line">  <span class="attr">lang:</span> <span class="string">zh-cn</span> <span class="comment"># 语言, 可选值: en, zh-cn</span></span><br><span class="line">  <span class="comment"># Warning: 不要同时启用 `waline.visitor` 以及 `leancloud_visitors`.</span></span><br><span class="line">  <span class="attr">visitor:</span> <span class="literal">false</span> <span class="comment"># 文章阅读统计</span></span><br><span class="line">  <span class="attr">comment_count:</span> <span class="literal">true</span> <span class="comment"># 如果为 false , 评论数量只会在当前评论页面显示, 主页则不显示</span></span><br><span class="line">  <span class="attr">requiredFields:</span> [] <span class="comment"># 设置用户评论时必填的信息，[nick,mail]: [nick] | [nick, mail]</span></span><br><span class="line">  <span class="attr">libUrl:</span> <span class="comment"># Set custom library cdn url</span></span><br></pre></td></tr></table></figure>

<p>重新部署 <code>Hexo</code> ，就可以看到结果了。</p>
<blockquote>
<p>据反馈，Hexo 似乎在 8.x 的版本使用 waline 比较稳定，如果出现 <code>hexo g</code> 出错，可尝试升级 hexo 版本。</p>
</blockquote>
<h2 id="4-登录服务端"><a href="#4-登录服务端" class="headerlink" title="4. 登录服务端"></a>4. 登录服务端</h2><p>由于 <code>Waline</code> 有服务端，支持评论管理。我们需要注册一个账号作为管理员。</p>
<p>找到评论框，点击 <code>登录</code> 按钮，会弹出一个窗口，找到用户注册，默认第一个注册的用户为管理员，所以部署好一定要记得及时注册。</p>
<p><a href="https://cdn.jsdelivr.net/gh/qianfanguojin/ImageHosting_1/hexo/202201211432511.png"><img src="https://cdn.jsdelivr.net/gh/qianfanguojin/ImageHosting_1/hexo/202201211432511.png" alt="img"></a></p>
<p>注册好，登录之后即可进入评论管理的后台，可以对评论进行管理。</p>
]]></content>
      <categories>
        <category>技术</category>
      </categories>
      <tags>
        <tag>博客</tag>
        <tag>记录</tag>
      </tags>
  </entry>
  <entry>
    <title>经典动态规划：打家劫舍系列问题</title>
    <url>/posts/5cd5216c/</url>
    <content><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="抱歉，您输入的密码错误，请检查后重新输入。" data-whm="抱歉, 当前文章不能被校验, 不过您还是可以看看解密后的内容。">
  <script id="hbeData" type="hbeData" data-hmacdigest="e53fc1e6e345957f0230ba06119f11eeaa4ab4c496441ffcbab6c2578d111785"></script>
  <div class="hbe hbe-content">
    <div class="hbe hbe-input hbe-input-default">
      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">
      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">
        <span class="hbe hbe-input-label-content hbe-input-label-content-default">当前文章暂不对外可见，请输入密码后查看！</span>
      </label>
    </div>
  </div>
</div>
<script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      <categories>
        <category>技术</category>
      </categories>
      <tags>
        <tag>感悟</tag>
        <tag>private</tag>
      </tags>
  </entry>
  <entry>
    <title>Hexo-Next 主题博客个性化配置(2022年更新版本)</title>
    <url>/posts/75999130/</url>
    <content><![CDATA[<h1 id="Hexo-Next-主题博客个性化配置-2022年更行版本"><a href="#Hexo-Next-主题博客个性化配置-2022年更行版本" class="headerlink" title="Hexo-Next 主题博客个性化配置(2022年更行版本)"></a>Hexo-Next 主题博客个性化配置(2022年更行版本)</h1><h2 id="网页预览："><a href="#网页预览：" class="headerlink" title="网页预览："></a>网页预览：</h2><p><a href="https://swimminghao.netlify.app/">swimminghao.netlify.app</a><br><img src="https://cdn.jsdelivr.net/gh/swimminghao/picture@main/img/2022/03/01/rRBwpH.png" alt="在这里插入图片描述"><br>因为本人比较喜欢简介风格的，所以整个界面都是<code>简约风格</code>的，一个好的博客，应该让人一眼就能看清楚技术分类,文章也应该就是文章，<code>让人能够最好的阅读你的博客</code> 这才是我们应该做的，所以没有太多花里胡哨的东西。</p>
<p><strong>使用工具：</strong></p>
<p><strong>Git<br>Github<br>visual studio code<br>Chrome</strong></p>
<h2 id="Hexo简易安装"><a href="#Hexo简易安装" class="headerlink" title="Hexo简易安装"></a>Hexo简易安装</h2><h3 id="前置条件"><a href="#前置条件" class="headerlink" title="前置条件"></a>前置条件</h3><p><strong>软件版本</strong></p>
<p><strong>HEXO: 6.0.6<br>Hero-theme-next: 8.10.0</strong></p>
<h3 id="安装hexo"><a href="#安装hexo" class="headerlink" title="安装hexo"></a>安装hexo</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">npm install -g hexo-cli</span><br></pre></td></tr></table></figure>

<h1 id="主题下载安装"><a href="#主题下载安装" class="headerlink" title="主题下载安装"></a>主题下载安装</h1><p>进入命令行，下载 <a href="https://so.csdn.net/so/search?q=NexT&spm=1001.2101.3001.7020">NexT</a> 主题，输入：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git <span class="built_in">clone</span> https://github.com/next-theme/hexo-theme-next/ themes/next</span><br></pre></td></tr></table></figure>

<p>修改站点配置文件<code>_config.yml</code>，找到如下代码：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">## Themes: https://hexo.io/themes/</span></span><br><span class="line">theme: landscape =&gt; next</span><br></pre></td></tr></table></figure>

<p>将 landscape 修改为 next 即可。</p>
<h2 id="配置文件"><a href="#配置文件" class="headerlink" title="配置文件"></a>配置文件</h2><p>在 Hexo 中有<strong>两份</strong>主要的配置文件，其名称都是 <strong>_config.yml</strong>。 其中，一份位于站点根目录下，主要包含 Hexo 本身的站点配置；另一份位于主<strong>题目录下</strong>，这份配置由主题作者提供，主要用于配置主题相关的选项。</p>
<p>为了描述方便，在以下说明中，将前者称为 **<code>站点配置文件</code>**， 后者称为 **<code>主题配置文件</code>**。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">/hexo/_config.yml</span><br><span class="line">/hexo/themes/next/_config.yml</span><br></pre></td></tr></table></figure>

<h2 id="修改语言"><a href="#修改语言" class="headerlink" title="修改语言"></a>修改语言</h2><p>打开站点配置文件，搜索 language，找到如下代码：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">author: authorName</span><br><span class="line">language: zh-CN</span><br><span class="line">timezone: Asia/Shanghai</span><br></pre></td></tr></table></figure>

<h2 id="新建标签及分类界面"><a href="#新建标签及分类界面" class="headerlink" title="新建标签及分类界面"></a>新建标签及分类界面</h2><p>打开 <strong>主题配置文件</strong>，搜索 menu，找到如下代码：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">menu:</span><br><span class="line">  home: / || fa fa-home</span><br><span class="line">  about: /about/ || fa fa-user</span><br><span class="line">  tags: /tags/ || fa fa-tags</span><br><span class="line">  categories: /categories/ || fa fa-th</span><br><span class="line">  archives: /archives/ || fa fa-archive</span><br><span class="line">  <span class="comment">#schedule: /schedule/ || fa fa-calendar</span></span><br><span class="line">  sitemap: /sitemap.xml || fa fa-sitemap</span><br><span class="line">  <span class="comment">#commonweal: /404/ || fa fa-heartbeat</span></span><br></pre></td></tr></table></figure>

<p>把 tags 和 categories 前面的 # 删除，</p>
<h2 id="切换主题"><a href="#切换主题" class="headerlink" title="切换主题"></a>切换主题</h2><p>next 主题自带<strong>四种样式</strong>。</p>
<p>在主题配置文件<code>/next/_config.yml</code>中查找：<code>scheme</code>，找到如下代码：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Schemes</span></span><br><span class="line">scheme: Muse</span><br><span class="line"><span class="comment">#scheme: Mist</span></span><br><span class="line"><span class="comment">#scheme: Pisces</span></span><br><span class="line"><span class="comment">#scheme: Gemini</span></span><br><span class="line">选择你喜欢的一种样式，去掉前面的 <span class="comment">#，其他主题前加上 # 即可。</span></span><br></pre></td></tr></table></figure>

<h2 id="隐藏网页底部-powered-By-Hexo-x2F-强力驱动"><a href="#隐藏网页底部-powered-By-Hexo-x2F-强力驱动" class="headerlink" title="隐藏网页底部 powered By Hexo &#x2F; 强力驱动"></a>隐藏网页底部 powered By Hexo &#x2F; 强力驱动</h2><p>打开 themes&#x2F;next&#x2F;layout&#x2F;_partials&#x2F;footer.njk</p>
<p>找到：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">&#123;\%- <span class="keyword">if</span> theme.footer.powered %&#125;</span><br><span class="line">  &lt;div class=<span class="string">&quot;powered-by&quot;</span>&gt;</span><br><span class="line">    &#123;\%- <span class="type">set</span> <span class="variable">next_site</span> <span class="operator">=</span> <span class="string">&#x27;https://theme-next.js.org&#x27;</span> <span class="keyword">if</span> theme.scheme === <span class="string">&#x27;Gemini&#x27;</span> <span class="keyword">else</span> <span class="string">&#x27;https://theme-next.js.org/&#x27;</span> + theme.scheme | lower + <span class="string">&#x27;/&#x27;</span> %&#125;</span><br><span class="line">    &#123;&#123;- __(<span class="string">&#x27;footer.powered&#x27;</span>, next_url(<span class="string">&#x27;https://hexo.io&#x27;</span>, <span class="string">&#x27;Hexo&#x27;</span>) + <span class="string">&#x27; &amp; &#x27;</span> + next_url(next_site, <span class="string">&#x27;NexT.&#x27;</span> + theme.scheme)) &#125;&#125;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&#123;\%- endif %&#125;</span><br></pre></td></tr></table></figure>

<p>把这段代码首尾分别加上：<code>&lt;!--</code> 和<code>--&gt;</code>，或者直接删除。</p>
<h2 id="主页文章添加阴影"><a href="#主页文章添加阴影" class="headerlink" title="主页文章添加阴影"></a>主页文章添加阴影</h2><p>参考： <a href="https://www.jianshu.com/p/64caf29fdd0c">Hexo NexT 主题美化记录</a><br>打开<code>themes\next\source\css\_common\components\post\index.styl</code>文件，将<code>post-block</code>更改为如下代码：</p>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="string">if</span> <span class="string">(hexo-config(&#x27;motion.transition.post_block&#x27;))</span> &#123;</span><br><span class="line">    <span class="string">.post-block</span>&#123;</span><br><span class="line">        <span class="attr">margin-top:</span> <span class="string">60px;</span></span><br><span class="line">        <span class="attr">margin-bottom:</span> <span class="string">60px;</span></span><br><span class="line">        <span class="attr">padding:</span> <span class="string">25px;</span></span><br><span class="line">        <span class="string">background:rgba(255</span>,<span class="number">255</span>,<span class="number">255</span>,<span class="number">0.9</span><span class="string">)</span> <span class="string">none</span> <span class="string">repeat</span> <span class="string">scroll</span> <span class="type">!important;</span> <span class="string">//添加透明效果</span></span><br><span class="line">        <span class="string">-webkit-box-shadow:</span> <span class="number">0</span> <span class="number">0</span> <span class="string">5px</span> <span class="string">rgba(202</span>, <span class="number">203</span>, <span class="number">203</span>, <span class="number">.5</span><span class="string">);</span></span><br><span class="line">        <span class="string">-moz-box-shadow:</span> <span class="number">0</span> <span class="number">0</span> <span class="string">5px</span> <span class="string">rgba(202</span>, <span class="number">203</span>, <span class="number">204</span>, <span class="number">.5</span><span class="string">);</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="string">.pagination</span>, <span class="string">.comments</span> &#123;</span><br><span class="line">      <span class="attr">opacity:</span> <span class="number">0</span><span class="string">;</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure>

<h2 id="页脚增加网站运行时间统计"><a href="#页脚增加网站运行时间统计" class="headerlink" title="页脚增加网站运行时间统计"></a>页脚增加网站运行时间统计</h2><ol>
<li>打开<code>themes/next/layout/_partials/footer.njk</code>文件，在如下图位置加入代码：</li>
</ol>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">&#123;\%- <span class="keyword">if</span> config.<span class="property">symbols_count_time</span>.<span class="property">total_symbols</span> or config.<span class="property">symbols_count_time</span>.<span class="property">total_time</span> %&#125;</span><br><span class="line">&lt;div <span class="keyword">class</span>=<span class="string">&quot;wordcount&quot;</span>&gt;</span><br><span class="line">  &#123;\%- <span class="keyword">if</span> config.<span class="property">symbols_count_time</span>.<span class="property">total_symbols</span> %&#125;</span><br><span class="line">  &lt;span <span class="keyword">class</span>=<span class="string">&quot;post-meta-item&quot;</span>&gt;</span><br><span class="line">    <span class="language-xml"><span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;post-meta-item-icon&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">&quot;fa fa-chart-line&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">span</span>&gt;</span></span></span><br><span class="line">    &#123;\%- <span class="keyword">if</span> theme.<span class="property">symbols_count_time</span>.<span class="property">item_text_total</span> %&#125;</span><br><span class="line">      &lt;span&gt;&#123;&#123; <span class="title function_">__</span>(<span class="string">&#x27;symbols_count_time.count_total&#x27;</span>) + <span class="title function_">__</span>(<span class="string">&#x27;symbol.colon&#x27;</span>) &#125;&#125;&lt;/span&gt;</span><br><span class="line">    &#123;\%- endif %&#125;</span><br><span class="line">    &lt;span title=<span class="string">&quot;&#123;&#123; __(&#x27;symbols_count_time.count_total&#x27;) &#125;&#125;&quot;</span>&gt;&#123;&#123; <span class="title function_">symbolsCountTotal</span>(site) &#125;&#125;&lt;/span&gt;</span><br><span class="line">  &lt;/span&gt;</span><br><span class="line">  &#123;\%- endif %&#125;</span><br><span class="line"></span><br><span class="line">  &#123;\%- <span class="keyword">if</span> config.<span class="property">symbols_count_time</span>.<span class="property">total_time</span> %&#125;</span><br><span class="line">  &lt;span <span class="keyword">class</span>=<span class="string">&quot;post-meta-item&quot;</span>&gt;</span><br><span class="line">    <span class="language-xml"><span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;post-meta-item-icon&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">&quot;fa fa-coffee&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">span</span>&gt;</span></span></span><br><span class="line">    &#123;\%- <span class="keyword">if</span> theme.<span class="property">symbols_count_time</span>.<span class="property">item_text_total</span> %&#125;</span><br><span class="line">      &lt;span&gt;&#123;&#123; <span class="title function_">__</span>(<span class="string">&#x27;symbols_count_time.time_total&#x27;</span>) &#125;&#125; &amp;asymp;&lt;/span&gt;</span><br><span class="line">    &#123;\%- endif %&#125;</span><br><span class="line">    &lt;span title=<span class="string">&quot;&#123;&#123; __(&#x27;symbols_count_time.time_total&#x27;) &#125;&#125;&quot;</span>&gt;&#123;&#123; <span class="title function_">symbolsTimeTotal</span>(site, config.<span class="property">symbols_count_time</span>.<span class="property">awl</span>, config.<span class="property">symbols_count_time</span>.<span class="property">wpm</span>, <span class="title function_">__</span>(<span class="string">&#x27;symbols_count_time.time_minutes&#x27;</span>)) &#125;&#125;&lt;/span&gt;</span><br><span class="line">  &lt;/span&gt;</span><br><span class="line">  &#123;\%- endif %&#125;</span><br><span class="line">&lt;/div&gt;</span><br><span class="line">&#123;\%- endif %&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//此位置插入代码</span></span><br><span class="line"></span><br><span class="line">&#123;\%- <span class="keyword">if</span> theme.<span class="property">busuanzi_count</span>.<span class="property">enable</span> %&#125;</span><br><span class="line">&lt;div <span class="keyword">class</span>=<span class="string">&quot;busuanzi-count&quot;</span>&gt;</span><br></pre></td></tr></table></figure>

<p>倒计时代码：</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">&lt;span id=<span class="string">&quot;sitetime&quot;</span>&gt;&lt;/span&gt;</span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">script</span> <span class="attr">language</span>=<span class="string">javascript</span>&gt;</span><span class="language-javascript"></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="keyword">function</span> <span class="title function_">siteTime</span>(<span class="params"></span>)&#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        <span class="variable language_">window</span>.<span class="built_in">setTimeout</span>(<span class="string">&quot;siteTime()&quot;</span>, <span class="number">1000</span>);</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        <span class="keyword">var</span> seconds = <span class="number">1000</span>;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        <span class="keyword">var</span> minutes = seconds * <span class="number">60</span>;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        <span class="keyword">var</span> hours = minutes * <span class="number">60</span>;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        <span class="keyword">var</span> days = hours * <span class="number">24</span>;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        <span class="keyword">var</span> years = days * <span class="number">365</span>;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        <span class="keyword">var</span> today = <span class="keyword">new</span> <span class="title class_">Date</span>();</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        <span class="keyword">var</span> todayYear = today.<span class="title function_">getFullYear</span>();</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        <span class="keyword">var</span> todayMonth = today.<span class="title function_">getMonth</span>()+<span class="number">1</span>;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        <span class="keyword">var</span> todayDate = today.<span class="title function_">getDate</span>();</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        <span class="keyword">var</span> todayHour = today.<span class="title function_">getHours</span>();</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        <span class="keyword">var</span> todayMinute = today.<span class="title function_">getMinutes</span>();</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        <span class="keyword">var</span> todaySecond = today.<span class="title function_">getSeconds</span>();</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        <span class="comment">/* Date.UTC() -- 返回date对象距世界标准时间(UTC)1970年1月1日午夜之间的毫秒数(时间戳)</span></span></span></span><br><span class="line"><span class="comment"><span class="language-javascript"><span class="language-xml">        year - 作为date对象的年份，为4位年份值</span></span></span></span><br><span class="line"><span class="comment"><span class="language-javascript"><span class="language-xml">        month - 0-11之间的整数，做为date对象的月份</span></span></span></span><br><span class="line"><span class="comment"><span class="language-javascript"><span class="language-xml">        day - 1-31之间的整数，做为date对象的天数</span></span></span></span><br><span class="line"><span class="comment"><span class="language-javascript"><span class="language-xml">        hours - 0(午夜24点)-23之间的整数，做为date对象的小时数</span></span></span></span><br><span class="line"><span class="comment"><span class="language-javascript"><span class="language-xml">        minutes - 0-59之间的整数，做为date对象的分钟数</span></span></span></span><br><span class="line"><span class="comment"><span class="language-javascript"><span class="language-xml">        seconds - 0-59之间的整数，做为date对象的秒数</span></span></span></span><br><span class="line"><span class="comment"><span class="language-javascript"><span class="language-xml">        microseconds - 0-999之间的整数，做为date对象的毫秒数 */</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        <span class="keyword">var</span> t1 = <span class="title class_">Date</span>.<span class="title function_">UTC</span>(<span class="number">2022</span>,<span class="number">01</span>,<span class="number">04</span>,<span class="number">00</span>,<span class="number">00</span>,<span class="number">00</span>); <span class="comment">//你的建站时间</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        <span class="keyword">var</span> t2 = <span class="title class_">Date</span>.<span class="title function_">UTC</span>(todayYear,todayMonth,todayDate,todayHour,todayMinute,todaySecond);</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        <span class="keyword">var</span> diff = t2-t1;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        <span class="keyword">var</span> diffYears = <span class="title class_">Math</span>.<span class="title function_">floor</span>(diff/years);</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        <span class="keyword">var</span> diffDays = <span class="title class_">Math</span>.<span class="title function_">floor</span>((diff/days)-diffYears*<span class="number">365</span>);</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        <span class="keyword">var</span> diffHours = <span class="title class_">Math</span>.<span class="title function_">floor</span>((diff-(diffYears*<span class="number">365</span>+diffDays)*days)/hours);</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        <span class="keyword">var</span> diffMinutes = <span class="title class_">Math</span>.<span class="title function_">floor</span>((diff-(diffYears*<span class="number">365</span>+diffDays)*days-diffHours*hours)/minutes);</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        <span class="keyword">var</span> diffSeconds = <span class="title class_">Math</span>.<span class="title function_">floor</span>((diff-(diffYears*<span class="number">365</span>+diffDays)*days-diffHours*hours-diffMinutes*minutes)/seconds);</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&quot;sitetime&quot;</span>).<span class="property">innerHTML</span>=<span class="string">&quot; Run for &quot;</span>+diffYears+<span class="string">&quot; Year &quot;</span>+diffDays+<span class="string">&quot; Days &quot;</span>+diffHours+<span class="string">&quot; Hours &quot;</span>+diffMinutes+<span class="string">&quot; m &quot;</span>+diffSeconds+<span class="string">&quot; s&quot;</span>;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    &#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="title function_">siteTime</span>();</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br></pre></td></tr></table></figure>

<ol>
<li>在<code>themes\next\source\css\main.styl</code>文件中给倒计时添加样式</li>
</ol>
<p><strong>不生效</strong></p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-id">#sitetime</span> &#123;</span><br><span class="line">  <span class="attribute">background-image</span>: <span class="built_in">-webkit-linear-gradient</span>(left, <span class="number">#aa4b6b</span>, <span class="number">#6b6b83</span>, <span class="number">#3b8d99</span>);</span><br><span class="line">  -webkit-<span class="attribute">background-clip</span>: text;</span><br><span class="line">  -webkit-text-fill-<span class="attribute">color</span>: transparent;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="浏览页面显示当前浏览进度"><a href="#浏览页面显示当前浏览进度" class="headerlink" title="浏览页面显示当前浏览进度"></a>浏览页面显示当前浏览进度</h2><p>打开 themes&#x2F;next&#x2F;_config.yml，搜索关键字 <code>scrollpercent</code>，把 false 改为 true。</p>
<p><strong>效果图：</strong><br><img src="https://cdn.jsdelivr.net/gh/swimminghao/picture@main/img/2022/03/02/SIVZj0.png" alt="在这里插入图片描述"></p>
<h2 id="Local-Search本地搜索"><a href="#Local-Search本地搜索" class="headerlink" title="Local Search本地搜索"></a>Local Search本地搜索</h2><p>安装插件<code>hexo-generator-searchdb</code>,执行以下命令:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">npm install hexo-generator-searchdb --save	</span><br></pre></td></tr></table></figure>

<p>修改<code>hexo/_config.yml</code>站点配置文件，新增以下内容到任意位置：</p>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="attr">search:</span></span><br><span class="line">  <span class="attr">path:</span> <span class="string">search.xml</span></span><br><span class="line">  <span class="attr">field:</span> <span class="string">post</span></span><br><span class="line">  <span class="attr">format:</span> <span class="string">html</span></span><br><span class="line">  <span class="attr">limit:</span> <span class="number">10000</span></span><br></pre></td></tr></table></figure>

<p>编辑 <strong>主题配置文件</strong>，启用本地搜索功能：</p>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Local search</span></span><br><span class="line"><span class="attr">local_search:</span></span><br><span class="line">	<span class="attr">enable:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure>

<p><strong>效果图：</strong><br><img src="https://cdn.jsdelivr.net/gh/swimminghao/picture@main/img/2022/03/02/b1OAJr.png" alt="在这里插入图片描述"></p>
<h2 id="设置网站图标"><a href="#设置网站图标" class="headerlink" title="设置网站图标"></a>设置网站图标</h2><p>在 <a href="https://www.easyicon.cc/">EasyIcon</a> 中找一张（32 * 32）的 ico 图标，或者去别的网站下载或者制作，并将图标名称改为 favicon.ico，然后把图标放在 <code>/themes/next/source/images</code> 里，并且修改主题配置文件：</p>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="string">Put</span> <span class="string">your</span> <span class="string">favicon.ico</span> <span class="string">into</span> <span class="string">`hexo-site/source/`</span> <span class="string">directory.</span></span><br><span class="line"><span class="attr">favicon:</span> <span class="string">/favicon.ico</span></span><br></pre></td></tr></table></figure>

<h2 id="修改文章底部的-号的标签，改为图标"><a href="#修改文章底部的-号的标签，改为图标" class="headerlink" title="修改文章底部的#号的标签，改为图标"></a>修改文章底部的#号的标签，改为图标</h2><p>修改模板<code>/themes/next/layout/_macro/post.swig</code></p>
<p>搜索 <code>rel=&quot;tag&quot;&gt;&#123;&#123; tag_indicate &#125;&#125;</code>，将 <code>&#123;&#123; tag_indicate &#125;&#125;</code> 换成<code>&lt;i class=&quot;fa fa-tag&quot;&gt;&lt;/i&gt;</code></p>
<p><strong>效果图：</strong><br><img src="https://cdn.jsdelivr.net/gh/swimminghao/picture@main/img/2022/03/02/IPgd1C.png" alt="在这里插入图片描述"></p>
<h1 id="文章分享功能"><a href="#文章分享功能" class="headerlink" title="文章分享功能"></a>文章分享功能</h1><p>打开<code>themes/next/_config.yml</code> 搜索关键字<code>needmoreshare2</code> 修改为下面设置</p>
<p>用npm卸载掉<code>hexo-next-share</code>，搜索所有<code>hexo-next-share</code>文件夹删除干净，然后切换到<strong>网站文件夹</strong>下，运行<code>npm install theme-next/hexo-next-share --save</code>,将以下代码都复制进<strong>主题配置文件</strong>里</p>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># NeedMoreShare2</span></span><br><span class="line"><span class="comment"># Dependencies: https://github.com/theme-next/theme-next-needmoreshare2</span></span><br><span class="line"><span class="comment"># For more information: https://github.com/revir/need-more-share2</span></span><br><span class="line"><span class="comment"># iconStyle: default | box</span></span><br><span class="line"><span class="comment"># boxForm: horizontal | vertical</span></span><br><span class="line"><span class="comment"># position: top / middle / bottom + Left / Center / Right</span></span><br><span class="line"><span class="comment"># networks:</span></span><br><span class="line"><span class="comment"># Weibo | Wechat | Douban | QQZone | Twitter | Facebook | Linkedin | Mailto | Reddit | Delicious | StumbleUpon | Pinterest</span></span><br><span class="line"><span class="comment"># GooglePlus | Tumblr | GoogleBookmarks | Newsvine | Evernote | Friendfeed | Vkontakte | Odnoklassniki | Mailru</span></span><br><span class="line"><span class="attr">needmoreshare:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">cdn:</span></span><br><span class="line">    <span class="attr">js:</span> <span class="string">//cdn.jsdelivr.net/gh/theme-next/theme-next-needmoreshare2@1/needsharebutton.min.js</span></span><br><span class="line">    <span class="attr">css:</span> <span class="string">//cdn.jsdelivr.net/gh/theme-next/theme-next-needmoreshare2@1/needsharebutton.min.css</span></span><br><span class="line">  <span class="attr">postbottom:</span></span><br><span class="line">    <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">options:</span></span><br><span class="line">      <span class="attr">iconStyle:</span> <span class="string">default</span></span><br><span class="line">      <span class="attr">boxForm:</span> <span class="string">horizontal</span></span><br><span class="line">      <span class="attr">position:</span> <span class="string">middleCenter</span></span><br><span class="line">      <span class="attr">networks:</span> <span class="string">Weibo,Wechat,Douban,QQZone,Twitter,Facebook</span></span><br><span class="line">  <span class="attr">float:</span></span><br><span class="line">    <span class="attr">enable:</span> <span class="literal">false</span></span><br><span class="line">    <span class="attr">options:</span></span><br><span class="line">      <span class="attr">iconStyle:</span> <span class="string">default</span></span><br><span class="line">      <span class="attr">boxForm:</span> <span class="string">horizontal</span></span><br><span class="line">      <span class="attr">position:</span> <span class="string">middleCenter</span></span><br><span class="line">      <span class="attr">networks:</span> <span class="string">Weibo,Wechat,Douban,QQZone,Twitter,Facebook</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># Likely Share</span></span><br><span class="line"><span class="comment"># See: https://ilyabirman.net/projects/likely/, https://github.com/ilyabirman/Likely</span></span><br><span class="line"><span class="comment"># Likely supports four looks, nine social networks, any button text.</span></span><br><span class="line"><span class="comment"># You are free to modify the text value and order of any network.</span></span><br><span class="line"><span class="attr">likely:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">false</span></span><br><span class="line">  <span class="attr">cdn:</span></span><br><span class="line">    <span class="attr">js:</span> <span class="string">//cdn.jsdelivr.net/npm/ilyabirman-likely@2/release/likely.min.js</span></span><br><span class="line">    <span class="attr">css:</span> <span class="string">//cdn.jsdelivr.net/npm/ilyabirman-likely@2/release/likely.min.css</span></span><br><span class="line">  <span class="attr">look:</span> <span class="string">light</span> <span class="comment"># available values: normal, light, small, big</span></span><br><span class="line">  <span class="attr">networks:</span></span><br><span class="line">    <span class="attr">twitter:</span> <span class="string">Tweet</span></span><br><span class="line">    <span class="attr">facebook:</span> <span class="string">Share</span></span><br><span class="line">    <span class="attr">linkedin:</span> <span class="string">Link</span></span><br><span class="line">    <span class="attr">gplus:</span> <span class="string">Plus</span></span><br><span class="line">    <span class="attr">vkontakte:</span> <span class="string">Share</span></span><br><span class="line">    <span class="attr">odnoklassniki:</span> <span class="string">Class</span></span><br><span class="line">    <span class="attr">telegram:</span> <span class="string">Send</span></span><br><span class="line">    <span class="attr">whatsapp:</span> <span class="string">Send</span></span><br><span class="line">    <span class="attr">pinterest:</span> <span class="string">Pin</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># share.js</span></span><br><span class="line"><span class="comment"># See: https://github.com/overtrue/share.js</span></span><br><span class="line"><span class="comment"># networks: weibo,qq,wechat,tencent,douban,qzone,linkedin,diandian,facebook,twitter,google</span></span><br><span class="line"><span class="attr">sharejs:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">false</span></span><br><span class="line">  <span class="attr">cdn:</span></span><br><span class="line">    <span class="attr">js:</span> <span class="string">//cdn.jsdelivr.net/npm/social-share.js@1/dist/js/social-share.min.js</span></span><br><span class="line">    <span class="attr">css:</span> <span class="string">//cdn.jsdelivr.net/npm/social-share.js@1/dist/js/social-share.min.css</span></span><br><span class="line">  <span class="attr">networks:</span> <span class="string">weibo,qq,wechat,tencent,douban,qzone,linkedin,diandian,facebook,twitter,google</span></span><br><span class="line">  <span class="attr">wechat_qrcode:</span></span><br><span class="line">    <span class="attr">title:</span> <span class="string">share.title</span></span><br><span class="line">    <span class="attr">prompt:</span> <span class="string">share.prompt</span></span><br></pre></td></tr></table></figure>

<p>效果图：<br><code>postbottom</code>为文章末尾分享 <code>float</code>则是在页面侧端分享<br><img src="https://cdn.jsdelivr.net/gh/swimminghao/picture@main/img/2022/03/02/ce3s7Z.png" alt="在这里插入图片描述"></p>
<h2 id="文章加密访问"><a href="#文章加密访问" class="headerlink" title="文章加密访问"></a>文章加密访问</h2><p>参考链接： <a href="https://swimminghao.netlify.app/posts/c30e6297/">hexo文章加密访问</a></p>
<h2 id="增加文章字数统计及阅读时常功能"><a href="#增加文章字数统计及阅读时常功能" class="headerlink" title="增加文章字数统计及阅读时常功能"></a>增加文章字数统计及阅读时常功能</h2><p>安装字数统计插件 <code>npm i hexo-symbols-count-time</code><br>在<code>hexo</code>的<code>_config.yml</code>下找到<code># Extensions</code>在下面配置插件配置如下</p>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 字数统计插件 npm i hexo-symbols-count-time</span></span><br><span class="line"><span class="attr">symbols_count_time:</span></span><br><span class="line">  <span class="attr">symbols:</span> <span class="literal">true</span> <span class="comment"># 文章字数统计</span></span><br><span class="line">  <span class="attr">time:</span> <span class="literal">true</span> <span class="comment"># 文章时长统计</span></span><br><span class="line">  <span class="attr">total_symbols:</span> <span class="literal">true</span> <span class="comment"># 全局字数统计</span></span><br><span class="line">  <span class="attr">total_time:</span> <span class="literal">true</span> <span class="comment"># 全局时长统计</span></span><br><span class="line">  <span class="attr">exclude_codeblock:</span> <span class="literal">false</span>  <span class="comment"># 排除代码字数统计</span></span><br></pre></td></tr></table></figure>

<h2 id="文章置顶功能"><a href="#文章置顶功能" class="headerlink" title="文章置顶功能"></a>文章置顶功能</h2><p>移除默认安装的插件：</p>
<p><code>npm uninstall hexo-generator-index --save</code><br>安装新插件:</p>
<p><code>npm install hexo-generator-index-pin-top --save</code><br>最后编辑有这需求的相关文章时，在Front-matter（文件最上方以—分隔的区域）加上一行：</p>
<figure class="highlight nsis"><table><tr><td class="code"><pre><span class="line"><span class="literal">top</span>: <span class="literal">true</span></span><br></pre></td></tr></table></figure>

<p>如果你置顶了多篇，怎么控制顺序呢？设置top的值（大的在前面），比如：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"># Post a.md</span><br><span class="line">title: a</span><br><span class="line">top: <span class="number">1</span></span><br><span class="line"></span><br><span class="line"># Post b.md</span><br><span class="line">title: b</span><br><span class="line">top: <span class="number">10</span></span><br><span class="line"><span class="number">1234567</span></span><br></pre></td></tr></table></figure>

<p>文章 b 便会显示在文章 a 的前面</p>
<p>设置置顶图标<br>打开<code>/themes/next/layout/_macro/post.swig</code>文件，在<code>&lt;div class=&quot;post-meta-container&quot;&gt;</code>下方，插入如下代码：</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">&#123;\% <span class="keyword">if</span> post.<span class="property">top</span> %&#125;</span><br><span class="line">    &lt;i <span class="keyword">class</span>=<span class="string">&quot;fa fa-thumb-tack&quot;</span>&gt;&lt;/i&gt;</span><br><span class="line">    <span class="language-xml"><span class="tag">&lt;<span class="name">font</span> <span class="attr">color</span>=<span class="string">7D26CD</span>&gt;</span>置顶<span class="tag">&lt;/<span class="name">font</span>&gt;</span></span></span><br><span class="line">    <span class="language-xml"><span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;post-meta-divider&quot;</span>&gt;</span>|<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span></span><br><span class="line">&#123;\% endif %&#125;</span><br></pre></td></tr></table></figure>

<p><img src="https://cdn.jsdelivr.net/gh/swimminghao/picture@main/img/2022/03/02/FmHSJT.png" alt="在这里插入图片描述"></p>
<h2 id="修改-Read-More-按钮样式"><a href="#修改-Read-More-按钮样式" class="headerlink" title="修改[Read More]按钮样式"></a>修改[Read More]按钮样式</h2><p>修改<code>themes/next/source/css/_common/components/post/index.styl</code>文件，加入自定义样式</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line">// <span class="selector-attr">[Read More]</span>按钮样式</span><br><span class="line"><span class="selector-class">.post-button</span> <span class="selector-class">.btn</span> &#123;</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#555</span> <span class="meta">!important</span>;</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="built_in">rgb</span>(<span class="number">255</span>, <span class="number">255</span>, <span class="number">255</span>);</span><br><span class="line">    <span class="attribute">border-radius</span>: <span class="number">3px</span>;</span><br><span class="line">    <span class="attribute">font-size</span>: <span class="number">15px</span>;</span><br><span class="line">    <span class="attribute">box-shadow</span>: inset <span class="number">0px</span> <span class="number">0px</span> <span class="number">10px</span> <span class="number">0px</span> <span class="built_in">rgba</span>(<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0.35</span>);</span><br><span class="line">    <span class="attribute">border</span>: none <span class="meta">!important</span>;</span><br><span class="line">    <span class="attribute">transition-property</span>: unset;</span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">0px</span> <span class="number">15px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.post-button</span> <span class="selector-class">.btn</span><span class="selector-pseudo">:hover</span> &#123;</span><br><span class="line">    <span class="attribute">color</span>: <span class="built_in">rgb</span>(<span class="number">255</span>, <span class="number">255</span>, <span class="number">255</span>) <span class="meta">!important</span>;</span><br><span class="line">    <span class="attribute">border-radius</span>: <span class="number">3px</span>;</span><br><span class="line">    <span class="attribute">font-size</span>: <span class="number">15px</span>;</span><br><span class="line">    <span class="attribute">box-shadow</span>: inset <span class="number">0px</span> <span class="number">0px</span> <span class="number">10px</span> <span class="number">0px</span> <span class="built_in">rgba</span>(<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0.35</span>);</span><br><span class="line">    <span class="attribute">background-image</span>: <span class="built_in">linear-gradient</span>(<span class="number">90deg</span>, <span class="number">#a166ab</span> <span class="number">0%</span>, <span class="number">#ef4e7b</span> <span class="number">25%</span>, <span class="number">#f37055</span> <span class="number">50%</span>, <span class="number">#ef4e7b</span> <span class="number">75%</span>, <span class="number">#a166ab</span> <span class="number">100%</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p><strong>效果图：</strong><br><img src="https://cdn.jsdelivr.net/gh/swimminghao/picture@main/img/2022/03/03/ymZvXQ.png" alt="在这里插入图片描述"></p>
<h2 id="修改-阅读全文-前显示文字数量即位置"><a href="#修改-阅读全文-前显示文字数量即位置" class="headerlink" title="修改 阅读全文 前显示文字数量即位置"></a>修改 阅读全文 前显示文字数量即位置</h2><p>打开 <code>themes/next/_config.yml</code>，搜索关键字 <code>auto_excerpt</code>， 修改length即可修改阅读全文前显示文字数量</p>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="attr">auto_excerpt:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">length:</span> <span class="number">150</span></span><br></pre></td></tr></table></figure>

<p><strong>或者在文章中任意位置添加<code>&lt;!-- more --&gt;</code></strong></p>
<p>建议在文章中加入 <code>&lt;!-- more --&gt;</code><br>自定义 [Read More] 按钮之前要显示的内容！</p>
<h2 id="修改链接文字样式"><a href="#修改链接文字样式" class="headerlink" title="修改链接文字样式"></a>修改链接文字样式</h2><p>打开<code>themes/next/source/css/_common/components/post/index.styl</code>添加以下代码:</p>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="string">.post-body</span> <span class="string">p</span> <span class="string">a&#123;</span></span><br><span class="line"> <span class="attr">color:</span> <span class="comment">#0593d3;</span></span><br><span class="line"> <span class="attr">border-bottom:</span> <span class="string">none;</span></span><br><span class="line"> <span class="string">&amp;:hover</span> &#123;</span><br><span class="line">   <span class="attr">color:</span> <span class="comment">#ff106c;</span></span><br><span class="line">   <span class="attr">text-decoration:</span> <span class="string">underline;</span></span><br><span class="line"> &#125;</span><br><span class="line"><span class="string">&#125;</span></span><br></pre></td></tr></table></figure>

<p><strong>效果图：</strong><br><img src="https://cdn.jsdelivr.net/gh/swimminghao/picture@main/img/2022/03/03/6Ulm5b.png" alt="在这里插入图片描述"></p>
<h2 id="头像设置圆形-停留旋转效果"><a href="#头像设置圆形-停留旋转效果" class="headerlink" title="头像设置圆形,停留旋转效果"></a>头像设置圆形,停留旋转效果</h2><p>修改next主题配置文件,修改成以下代码:</p>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Sidebar Avatar</span></span><br><span class="line"><span class="attr">avatar:</span></span><br><span class="line">  <span class="comment"># Replace the default image and set the url here.</span></span><br><span class="line">  <span class="attr">url:</span> <span class="string">/images/lion.png</span></span><br><span class="line">  <span class="comment"># lion.png放置在next/source/images文件夹下</span></span><br><span class="line">  <span class="comment"># If true, the avatar will be displayed in circle.</span></span><br><span class="line">  <span class="attr">rounded:</span> <span class="literal">true</span></span><br><span class="line">  <span class="comment"># If true, the avatar will be rotated with the cursor.</span></span><br><span class="line">  <span class="attr">rotated:</span> <span class="literal">false</span></span><br></pre></td></tr></table></figure>

<p><strong>效果图：</strong><br><img src="https://cdn.jsdelivr.net/gh/swimminghao/picture@main/img/2022/03/03/lQxmpv.png" alt="在这里插入图片描述"></p>
<h2 id="增加近期文章"><a href="#增加近期文章" class="headerlink" title="增加近期文章"></a>增加近期文章</h2><p>hexo主站<code>source</code> 目录下创建 <code>_data/sidebar.njk</code> 文件，加入如下内容：</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line">&#123;# recent posts #&#125;</span><br><span class="line">&#123;\% if theme<span class="selector-class">.recent_posts</span> %&#125;</span><br><span class="line">  &lt;<span class="selector-tag">div</span> class=&quot;links-of-blogroll motion-element &#123;&#123; &quot;links-of-blogroll-&quot; + theme<span class="selector-class">.recent_posts_layout</span>  &#125;&#125;&quot;&gt;</span><br><span class="line">    &lt;<span class="selector-tag">div</span> class=&quot;links-of-blogroll-title&quot;&gt;</span><br><span class="line">      &lt;!-- modify <span class="attribute">icon</span> <span class="selector-tag">to</span> fire by szw --&gt;</span><br><span class="line">      &lt;<span class="selector-tag">i</span> class=&quot;fa fa-history fa-&#123;&#123; theme<span class="selector-class">.recent_posts_icon</span> | lower &#125;&#125;&quot; aria-hidden=&quot;true&quot;&gt;&lt;/<span class="selector-tag">i</span>&gt;</span><br><span class="line">      &#123;&#123; theme<span class="selector-class">.recent_posts_title</span> &#125;&#125;</span><br><span class="line">    &lt;/<span class="selector-tag">div</span>&gt;</span><br><span class="line">    &lt;<span class="selector-tag">ul</span> class=&quot;links-of-blogroll-list&quot;&gt;</span><br><span class="line">      &#123;\% set posts = site<span class="selector-class">.posts</span><span class="selector-class">.sort</span>(&#x27;-date&#x27;) %&#125;</span><br><span class="line">      &#123;\% for post in posts<span class="selector-class">.slice</span>(&#x27;<span class="number">0</span>&#x27;, &#x27;<span class="number">5</span>&#x27;) %&#125;</span><br><span class="line">        &lt;<span class="selector-tag">li</span> class=&quot;recent_posts_li&quot;&gt;</span><br><span class="line">          &lt;<span class="selector-tag">a</span> href=&quot;&#123;&#123; url_for(post<span class="selector-class">.path</span>) &#125;&#125;&quot; title=&quot;&#123;&#123; post<span class="selector-class">.title</span> &#125;&#125;&quot; target=&quot;_blank&quot;&gt;&#123;&#123; post<span class="selector-class">.title</span> &#125;&#125;&lt;/<span class="selector-tag">a</span>&gt;</span><br><span class="line">        &lt;/<span class="selector-tag">li</span>&gt;</span><br><span class="line">      &#123;\% endfor %&#125;</span><br><span class="line">    &lt;/<span class="selector-tag">ul</span>&gt;</span><br><span class="line">  &lt;/<span class="selector-tag">div</span>&gt;</span><br><span class="line">&#123;\% endif %&#125;</span><br></pre></td></tr></table></figure>

<p>并修改theme主题配置文件，取消sidebar的注释:</p>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="attr">custom_file_path:</span></span><br><span class="line">  <span class="comment">#head: source/_data/head.njk</span></span><br><span class="line">  <span class="comment">#header: source/_data/header.njk</span></span><br><span class="line">  <span class="attr">sidebar:</span> <span class="string">source/_data/sidebar.njk</span></span><br><span class="line">  <span class="comment">#postMeta: source/_data/post-meta.njk</span></span><br><span class="line">  <span class="comment">#postBodyEnd: source/_data/post-body-end.njk</span></span><br><span class="line">  <span class="comment">#footer: source/_data/footer.njk</span></span><br><span class="line">  <span class="attr">footer:</span> <span class="string">source/_data/footer.swig</span></span><br><span class="line">  <span class="comment">#bodyEnd: source/_data/body-end.njk</span></span><br><span class="line">  <span class="comment">#variable: source/_data/variables.styl</span></span><br><span class="line">  <span class="comment">#mixin: source/_data/mixins.styl</span></span><br><span class="line">  <span class="attr">style:</span> <span class="string">source/_data/styles.styl</span></span><br></pre></td></tr></table></figure>


<p>编辑<code>themes/next/source/css/_common/outline/sidebar/sidebar-blogroll.styl</code>文件，标题溢出隐藏</p>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="string">.links-of-blogroll-list</span> &#123;</span><br><span class="line">  <span class="attr">list-style:</span> <span class="string">none;</span></span><br><span class="line">  <span class="attr">margin:</span> <span class="number">0</span><span class="string">;</span></span><br><span class="line">  <span class="attr">padding:</span> <span class="number">0</span><span class="string">;</span></span><br><span class="line">  <span class="attr">text-align:</span> <span class="string">cengter;</span></span><br><span class="line">  <span class="attr">display:</span> <span class="string">block;</span></span><br><span class="line">  <span class="attr">word-break:</span> <span class="string">keep-all;</span></span><br><span class="line">  <span class="attr">white-space:</span> <span class="string">nowrap;</span></span><br><span class="line">  <span class="attr">overflow:</span> <span class="string">hidden;</span></span><br><span class="line">  <span class="attr">text-overflow:</span> <span class="string">ellipsis;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>在 <code>themes/next/_config.yml</code>中修改成下方代码</p>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 近期文章设置</span></span><br><span class="line"><span class="attr">recent_posts_title:</span> <span class="string">近期文章</span></span><br><span class="line"><span class="attr">recent_posts_layout:</span> <span class="string">block</span></span><br><span class="line"><span class="attr">recent_posts:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure>

<p><strong>效果图：</strong><br><img src="https://cdn.jsdelivr.net/gh/swimminghao/picture@main/img/2022/03/03/heV4KR.png" alt="在这里插入图片描述"></p>
<h2 id="文章末尾添加”本文结束”标记"><a href="#文章末尾添加”本文结束”标记" class="headerlink" title="文章末尾添加”本文结束”标记"></a>文章末尾添加”本文结束”标记</h2><ul>
<li><p>在目录<code>themes/next/layout/_macro/</code>下添加<code>passage-end-tag.swig</code>，内容如下： </p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">    &#123;\% if not is_index %&#125;</span><br><span class="line">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">&quot;text-align:center;color: #ccc;font-size:20px;&quot;</span>&gt;</span>------------- 本 文 结 束&amp;nbsp&amp;nbsp&amp;nbsp&amp;nbsp&amp;nbsp感 谢 您 的 阅 读 -------------<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    &#123;\% endif %&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure>
</li>
<li><p>打开<code>themes/next/layout/_macro/post.swig</code>文件，新增内容如下:</p>
</li>
<li><p>&#96;&#96;&#96;HTML<br><br>&#x2F;&#x2F;以下为新增代码</p>
<div>
    {\% if not is_index %}
    {\% include 'passage-end-tag.swig' %}
    {\% endif %}
 </div>
<figure class="highlight autohotkey"><table><tr><td class="code"><pre><span class="line">  </span><br><span class="line">- 打开`主题配置文件`，添加代码如下：</span><br><span class="line">- ```js</span><br><span class="line">  # 文章末尾添加“本文结束”标记</span><br><span class="line"><span class="title">  passage_end_tag:</span></span><br><span class="line"><span class="title">  enabled:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure></li>
</ul>
<h1 id="为博客加上妹子"><a href="#为博客加上妹子" class="headerlink" title="为博客加上妹子"></a>为博客加上妹子</h1><p>live2d与busuanzi组件有bug冲突，安装了live2d，busuanzi就失效，所以我没有使用。</p>
<p><code>npm install -save hexo-helper-live2d</code><br>然后在在 hexo 的 _config.yml中添加参数：</p>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="attr">live2d:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">scriptFrom:</span> <span class="string">local</span></span><br><span class="line">  <span class="attr">pluginRootPath:</span> <span class="string">live2dw/</span></span><br><span class="line">  <span class="attr">pluginJsPath:</span> <span class="string">lib/</span></span><br><span class="line">  <span class="attr">pluginModelPath:</span> <span class="string">assets/</span></span><br><span class="line">  <span class="attr">tagMode:</span> <span class="literal">false</span></span><br><span class="line">  <span class="attr">log:</span> <span class="literal">false</span></span><br><span class="line">  <span class="attr">model:</span></span><br><span class="line">    <span class="attr">use:</span> <span class="string">live2d-widget-model-&lt;你喜欢的模型名字&gt;s</span></span><br><span class="line">  <span class="attr">display:</span></span><br><span class="line">    <span class="attr">position:</span> <span class="string">right</span></span><br><span class="line">    <span class="attr">width:</span> <span class="number">150</span></span><br><span class="line">    <span class="attr">height:</span> <span class="number">300</span></span><br><span class="line">  <span class="attr">mobile:</span></span><br><span class="line">    <span class="attr">show:</span> <span class="literal">true</span></span><br><span class="line"></span><br><span class="line"><span class="number">12345678910111213141516</span></span><br></pre></td></tr></table></figure>

<p>可供选择模型：</p>
<ul>
<li><code>live2d-widget-model-chitose</code></li>
<li><code>live2d-widget-model-epsilon2_1</code></li>
<li><code>live2d-widget-model-gf</code></li>
<li><code>live2d-widget-model-haru/01 (use npm install --save live2d-widget-model-haru)</code></li>
<li><code>live2d-widget-model-haru/02 (use npm install --save live2d-widget-model-haru)</code></li>
<li><code>live2d-widget-model-haruto</code></li>
<li><code>live2d-widget-model-hibiki</code></li>
<li><code>live2d-widget-model-hijiki</code></li>
<li><code>live2d-widget-model-izumi</code></li>
<li><code>live2d-widget-model-koharu</code></li>
<li><code>live2d-widget-model-miku</code></li>
<li><code>live2d-widget-model-ni-j</code></li>
<li><code>live2d-widget-model-nico</code></li>
<li><code>live2d-widget-model-nietzsche</code></li>
<li><code>live2d-widget-model-nipsilon</code></li>
<li><code>live2d-widget-model-nito</code></li>
<li><code>live2d-widget-model-shizuku</code></li>
<li><code>live2d-widget-model-tororo</code></li>
<li><code>live2d-widget-model-tsumiki</code></li>
<li><code>live2d-widget-model-unitychan</code></li>
<li><code>live2d-widget-model-wanko</code></li>
<li><code>live2d-widget-model-z16</code></li>
</ul>
<p>在站点目录下建文件夹<code>live2d_models</code>，</p>
<p>再在<code>live2d_models</code>下建文件夹<code>&lt;你喜欢的模型名字</code>&gt;,</p>
<p>再在<code>&lt;你喜欢的模型名字&gt;</code>下建json文件：<code>&lt;你喜欢的模型名字&gt;.model.json</code></p>
<p>安装模型。在命令行（即Git Bash）运行以下命令即可：</p>
<figure class="highlight ada"><table><tr><td class="code"><pre><span class="line">npm install <span class="comment">--save live2d-widget-model-&lt;你喜欢的模型名字&gt;</span></span><br></pre></td></tr></table></figure>

<p>复制你喜欢的模型名字：</p>
<h2 id="代码块复制选项"><a href="#代码块复制选项" class="headerlink" title="代码块复制选项"></a>代码块复制选项</h2><p>Next6 中自带了复制代码按钮，Next5 需要自己手动配置。</p>
<p>搜索 codeblock，找到如下配置：</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">codeblock:</span></span><br><span class="line"><span class="attr">border_radius:</span> <span class="number">8</span>   <span class="comment"># 按钮圆滑度</span></span><br><span class="line"><span class="attr">copy_button:</span>  <span class="comment"># 设置是否开启代码块复制按钮</span></span><br><span class="line">	<span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">	<span class="attr">show_result:</span> <span class="literal">true</span>  <span class="comment"># 是否显示复制成功信息</span></span><br></pre></td></tr></table></figure>

<h2 id="修改加载特效"><a href="#修改加载特效" class="headerlink" title="修改加载特效"></a>修改加载特效</h2><p>由于网页不可能一直都秒进，总会等待一段时间的，所以可以设置顶部加载条。Next 已经集成了很多加载特效，可以在下面选项中在线调试测试一下。</p>
<p>next主题配置文件搜索<code>pace</code>，找到如下代码：</p>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Progress bar in the top during page loading.</span></span><br><span class="line"><span class="string">G#</span> <span class="attr">For more information:</span> <span class="string">https://github.com/CodeByZach/pace</span></span><br><span class="line"><span class="attr">pace:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="comment"># All available colors:</span></span><br><span class="line">  <span class="comment"># black | blue | green | orange | pink | purple | red | silver | white | yellow</span></span><br><span class="line">  <span class="attr">color:</span> <span class="string">blue</span></span><br><span class="line">  <span class="comment"># All available themes:</span></span><br><span class="line">  <span class="comment"># big-counter | bounce | barber-shop | center-atom | center-circle | center-radar | center-simple</span></span><br><span class="line">  <span class="comment"># corner-indicator | fill-left | flat-top | flash | loading-bar | mac-osx | material | minimal</span></span><br><span class="line">  <span class="attr">theme:</span> <span class="string">loading-bar</span></span><br></pre></td></tr></table></figure>

<h2 id="修改文章链接"><a href="#修改文章链接" class="headerlink" title="修改文章链接"></a>修改文章链接</h2><p>在做次优化之前，hexo-next文章链接默认的生成规则是：<code>:year/:month/:day/:title</code>，是按照年、月、日、标题来生成的。<br>比如：<code>https://zxiaoxuan.github.io/2019/08/12/hello-world/</code> 这样，如果文章标题是中文的话，URL链接是也会是中文，<br><img src="https://img-blog.csdnimg.cn/20190831093938325.png" alt="在这里插入图片描述"></p>
<p>那么要生存简洁且唯一的URL，怎么办呢</p>
<p><strong>安装插件</strong></p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">npm install hexo-abbrlink --save</span><br></pre></td></tr></table></figure>

<blockquote>
<p>执行此命令可能会不成功，提示你缺少相应的依赖，比如babel-eslint、mini-css-extract-plugin、webpack-cli…<br>使用npm命令安装即可，比如npm install <a href="mailto:&#101;&#x73;&#x6c;&#105;&#110;&#116;&#x40;&#x34;&#46;&#120;">&#101;&#x73;&#x6c;&#105;&#110;&#116;&#x40;&#x34;&#46;&#120;</a> babel-eslint@8 –save-dev</p>
</blockquote>
<p>修改根目录站点配置文件<code>config.yml</code>，改为：</p>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="attr">permalink:</span> <span class="string">posts/:abbrlink/</span></span><br><span class="line"><span class="attr">abbrlink:</span></span><br><span class="line">	<span class="attr">alg:</span> <span class="string">crc32</span>   <span class="comment">#算法： crc16(default) and crc32</span></span><br><span class="line">	<span class="attr">rep:</span> <span class="string">hex</span>     <span class="comment">#进制： dec(default) and hex</span></span><br></pre></td></tr></table></figure>

<p>生成的链接将会是这样的(官方样例)：<br><strong>四种可供选择</strong></p>
<figure class="highlight awk"><table><tr><td class="code"><pre><span class="line">crc16 &amp; hex</span><br><span class="line">https:<span class="regexp">//</span>post.zz173.com<span class="regexp">/posts/</span><span class="number">66</span>c8.html</span><br><span class="line"></span><br><span class="line">crc16 &amp; dec</span><br><span class="line">https:<span class="regexp">//</span>post.zz173.com<span class="regexp">/posts/</span><span class="number">65535</span>.html</span><br><span class="line">crc32 &amp; hex</span><br><span class="line">https:<span class="regexp">//</span>post.zz173.com<span class="regexp">/posts/</span><span class="number">8</span>ddf18fb.html</span><br><span class="line"></span><br><span class="line">crc32 &amp; dec</span><br><span class="line">https:<span class="regexp">//</span>post.zz173.com<span class="regexp">/posts/</span><span class="number">1690090958</span>.html</span><br><span class="line"><span class="number">12345678910</span></span><br></pre></td></tr></table></figure>

<p>生成完后，原<code>md</code>文件的<code>Front-matter</code> 内会增加<code>abbrlink</code> 字段，值为生成的ID 。这个字段确保了在我们修改了Front-matter 内的博客标题title或创建日期date字段之后而不会改变链接地址。</p>
<h2 id="评论-Waline-增强版"><a href="#评论-Waline-增强版" class="headerlink" title="评论 Waline 增强版"></a>评论 Waline 增强版</h2><p>参考链接<a href="%5Bhexo%E6%96%87%E7%AB%A0%E5%8A%A0%E5%AF%86%E8%AE%BF%E9%97%AE%5D(https://swimminghao.netlify.app/posts/a07389a8/)">Hexo NexT Waline评论</a></p>
<h2 id="各版块透明度修改"><a href="#各版块透明度修改" class="headerlink" title="各版块透明度修改"></a>各版块透明度修改</h2><p><strong>内容板块透明</strong><br>博客根目录 <code>themes\next\source\css\_schemes\Pisces\_layout.styl</code>文件 <code>.content-wrap</code> 标签下 <code>background: white</code>修改为：</p>
<figure class="highlight apache"><table><tr><td class="code"><pre><span class="line"><span class="attribute">background</span>: rgba(<span class="number">255</span>,<span class="number">255</span>,<span class="number">255</span>,<span class="number">0</span>.<span class="number">7</span>); //<span class="number">0</span>.<span class="number">7</span>是透明度</span><br></pre></td></tr></table></figure>

<p><strong>菜单栏背景</strong><br>博客根目录 <code>themes\next\source\css\_schemes\Pisces\_layout.styl</code>文件<code>.header-inner</code>标签下 background: white修改为：</p>
<figure class="highlight apache"><table><tr><td class="code"><pre><span class="line"><span class="attribute">background</span>: rgba(<span class="number">255</span>,<span class="number">255</span>,<span class="number">255</span>,<span class="number">0</span>.<span class="number">7</span>); //<span class="number">0</span>.<span class="number">7</span>是透明度</span><br></pre></td></tr></table></figure>

<p><strong>站点概况背景</strong><br>博客根目录<code>themes\next\source\css\_schemes\Pisces\_sidebar.styl</code> 文件<code>.sidebar-inner</code> 标签下 background: white修改为：</p>
<figure class="highlight apache"><table><tr><td class="code"><pre><span class="line"><span class="attribute">background</span>: rgba(<span class="number">255</span>,<span class="number">255</span>,<span class="number">255</span>,<span class="number">0</span>.<span class="number">7</span>); //<span class="number">0</span>.<span class="number">7</span>是透明度</span><br></pre></td></tr></table></figure>

<p>然后修改博客根目录<code>themes\next\source\css\_schemes\Pisces\_layout.styl</code>文件<code>.sidebar</code> 标签下 <code>background: $body-bg-color</code>修改为：</p>
<figure class="highlight apache"><table><tr><td class="code"><pre><span class="line"><span class="attribute">background</span>: rgba(<span class="number">255</span>,<span class="number">255</span>,<span class="number">255</span>,<span class="number">0</span>.<span class="number">7</span>); //<span class="number">0</span>.<span class="number">7</span>是透明度</span><br></pre></td></tr></table></figure>

<p><strong>按钮背景</strong><br>博客根目录<code>themes\next\source\css\_common\components\post\post-button.styl</code> 同上修改对应位置为 <code>background: transparent;</code></p>
<h2 id="标签修改"><a href="#标签修改" class="headerlink" title="标签修改"></a>标签修改</h2><p>打开<code>themes/next/layout/page.swig</code></p>
<p>修改这里可以修改标签页的标签显示<br><img src="https://img-blog.csdnimg.cn/2019092019070486.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2FzNDgwMTMzOTM3,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<p>在这里添加东西会在标签页面上显示<br><img src="https://img-blog.csdnimg.cn/20190920190746932.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2FzNDgwMTMzOTM3,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<h2 id="彩色标签云"><a href="#彩色标签云" class="headerlink" title="彩色标签云"></a>彩色标签云</h2><p>在<code>/themes/next/layout/</code>目录下，新增<code>tag-color.swig</code>文件，加入下方代码：</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">&lt;script type=<span class="string">&quot;text/javascript&quot;</span>&gt;</span><br><span class="line">     <span class="keyword">var</span> alltags = <span class="variable language_">document</span>.<span class="title function_">getElementsByClassName</span>(<span class="string">&#x27;tag-cloud-tags&#x27;</span>);</span><br><span class="line">     <span class="keyword">var</span> tags = alltags[<span class="number">0</span>].<span class="title function_">getElementsByTagName</span>(<span class="string">&#x27;a&#x27;</span>);</span><br><span class="line">     <span class="keyword">for</span> (<span class="keyword">var</span> i = tags.<span class="property">length</span> - <span class="number">1</span>; i &gt;= <span class="number">0</span>; i--) &#123;</span><br><span class="line">       <span class="keyword">var</span> r=<span class="title class_">Math</span>.<span class="title function_">floor</span>(<span class="title class_">Math</span>.<span class="title function_">random</span>()*<span class="number">75</span>+<span class="number">130</span>);</span><br><span class="line">       <span class="keyword">var</span> g=<span class="title class_">Math</span>.<span class="title function_">floor</span>(<span class="title class_">Math</span>.<span class="title function_">random</span>()*<span class="number">75</span>+<span class="number">100</span>);</span><br><span class="line">       <span class="keyword">var</span> b=<span class="title class_">Math</span>.<span class="title function_">floor</span>(<span class="title class_">Math</span>.<span class="title function_">random</span>()*<span class="number">75</span>+<span class="number">80</span>);</span><br><span class="line">       tags[i].<span class="property">style</span>.<span class="property">background</span> = <span class="string">&quot;rgb(&quot;</span>+r+<span class="string">&quot;,&quot;</span>+g+<span class="string">&quot;,&quot;</span>+b+<span class="string">&quot;)&quot;</span>;</span><br><span class="line">     &#125;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">  <span class="selector-class">.tag-cloud-tags</span>&#123;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">    <span class="comment">/*font-family: Helvetica, Tahoma, Arial;*/</span></span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">    <span class="comment">/*font-weight: 100;*/</span></span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">    <span class="attribute">text-align</span>: center;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">    <span class="attribute">counter-reset</span>: tags;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">  &#125;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">  <span class="selector-class">.tag-cloud-tags</span> <span class="selector-tag">a</span>&#123;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">    <span class="attribute">border-radius</span>: <span class="number">6px</span>;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">    <span class="attribute">padding-right</span>: <span class="number">5px</span>;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">    <span class="attribute">padding-left</span>: <span class="number">5px</span>;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">    <span class="attribute">margin</span>: <span class="number">8px</span> <span class="number">5px</span> <span class="number">0px</span> <span class="number">0px</span>;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">  &#125;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">  <span class="selector-class">.tag-cloud-tags</span> <span class="selector-tag">a</span><span class="selector-pseudo">:before</span>&#123;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">    <span class="attribute">content</span>: <span class="string">&quot;?&quot;</span>;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">  &#125;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml"></span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">  <span class="selector-class">.tag-cloud-tags</span> <span class="selector-tag">a</span><span class="selector-pseudo">:hover</span>&#123;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">     <span class="attribute">box-shadow</span>: <span class="number">0px</span> <span class="number">5px</span> <span class="number">15px</span> <span class="number">0px</span> <span class="built_in">rgba</span>(<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,.<span class="number">4</span>);</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">     <span class="attribute">transform</span>: <span class="built_in">scale</span>(<span class="number">1.1</span>);</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">     <span class="comment">/*box-shadow: 10px 10px 15px 2px rgba(0,0,0,.12), 0 0 6px 0 rgba(104, 104, 105, 0.1);*/</span></span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">     <span class="attribute">transition-duration</span>: <span class="number">0.15s</span>;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">  &#125;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span></span><br></pre></td></tr></table></figure>

<p>在&#x2F;themes&#x2F;next&#x2F;layout&#x2F;page.swig&#x2F;中引入tag-color.swig：</p>
<p>在下方加上 <code>&#123;\% include &#39;tag-color.swig&#39; %&#125;</code> 代码</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"> &lt;div <span class="keyword">class</span>=<span class="string">&quot;tag-cloud&quot;</span>&gt;</span><br><span class="line">          &lt;!--    <span class="language-xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;tag-cloud-title&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">                &#123;&#123; _p(&#x27;counter.tag_cloud&#x27;, site.tags.length) &#125;&#125;</span></span><br><span class="line"><span class="language-xml">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span>  --&gt;</span><br><span class="line">             <span class="language-xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;tag-cloud-tags&quot;</span> <span class="attr">id</span>=<span class="string">&quot;tags&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">			  &#123;&#123; tagcloud(&#123;min_font: 16, max_font: 16, amount: 300, color: true, start_color: &#x27;#FFF&#x27;, end_color: &#x27;#FFF&#x27;&#125;) &#125;&#125;            </span></span><br><span class="line"><span class="language-xml">		  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line">		&lt;/div&gt;</span><br><span class="line">+     &#123;\% include <span class="string">&#x27;tag-color.swig&#x27;</span> %&#125;</span><br></pre></td></tr></table></figure>

<p><strong>或者将上方代码直接添加到下方</strong></p>
<p><img src="https://img-blog.csdnimg.cn/20190922224709732.png" alt="在这里插入图片描述"></p>
<h2 id="将标签云放到首页"><a href="#将标签云放到首页" class="headerlink" title="将标签云放到首页"></a>将标签云放到首页</h2><p>在路径：<code>/themes/next/layout/index.swig</code> 中</p>
<p><code>&#123;\% block content %&#125;</code>下面添加下方代码</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">&#123;\% block content %&#125;</span><br><span class="line"></span><br><span class="line">	&lt;div <span class="keyword">class</span>=<span class="string">&quot;tag-cloud&quot;</span>&gt;</span><br><span class="line">	  <span class="language-xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;tag-cloud-tags&quot;</span> <span class="attr">id</span>=<span class="string">&quot;tags&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">		&#123;&#123; tagcloud(&#123;min_font: 16, max_font: 16, amount: 300, color: true, start_color: &#x27;#fff&#x27;, end_color: &#x27;#fff&#x27;&#125;) &#125;&#125;</span></span><br><span class="line"><span class="language-xml">	  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line">	&lt;/div&gt;</span><br><span class="line">	&lt;br&gt;</span><br><span class="line">	</span><br><span class="line">	&#123;\% include <span class="string">&#x27;tag-color.swig&#x27;</span> %&#125;</span><br></pre></td></tr></table></figure>

<p><img src="https://img-blog.csdnimg.cn/20190920194842525.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2FzNDgwMTMzOTM3,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<h2 id="归档页美化"><a href="#归档页美化" class="headerlink" title="归档页美化"></a>归档页美化</h2><p>修改&#x2F;themes&#x2F;next&#x2F;layout&#x2F;_macro&#x2F;post-collapse.swig后的代码如下：</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">&#123;\% macro <span class="title function_">render</span>(post) %&#125;</span><br><span class="line"></span><br><span class="line">  &lt;article <span class="keyword">class</span>=<span class="string">&quot;post post-type-&#123;&#123; post.type | default(&#x27;normal&#x27;) &#125;&#125;&quot;</span> itemscope itemtype=<span class="string">&quot;http://schema.org/Article&quot;</span>&gt;</span><br><span class="line">    <span class="language-xml"><span class="tag">&lt;<span class="name">header</span> <span class="attr">class</span>=<span class="string">&quot;post-header&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"></span></span><br><span class="line"><span class="language-xml">      &lt;&#123;\% if theme.seo %&#125;h3&#123;\% else %&#125;h2&#123;\% endif %&#125; class=&quot;post-title&quot;&gt;</span></span><br><span class="line"><span class="language-xml">        &#123;\% if post.link %&#125;&#123;# Link posts #&#125;</span></span><br><span class="line"><span class="language-xml">          <span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">&quot;post-title-link post-title-link-external&quot;</span> <span class="attr">target</span>=<span class="string">&quot;_blank&quot;</span> <span class="attr">href</span>=<span class="string">&quot;&#123;&#123; url_for(post.link) &#125;&#125;&quot;</span> <span class="attr">itemprop</span>=<span class="string">&quot;url&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">            &#123;&#123; post.title or post.link &#125;&#125;</span></span><br><span class="line"><span class="language-xml">            <span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">&quot;fa fa-external-link&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">          <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        &#123;\% else %&#125;</span></span><br><span class="line"><span class="language-xml">            <span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">&quot;post-title-link&quot;</span> <span class="attr">href</span>=<span class="string">&quot;&#123;&#123; url_for(post.path) &#125;&#125;&quot;</span> <span class="attr">itemprop</span>=<span class="string">&quot;url&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">              &#123;\% if post.type === &#x27;picture&#x27; %&#125;</span></span><br><span class="line"><span class="language-xml">                &#123;&#123; post.content &#125;&#125;</span></span><br><span class="line"><span class="language-xml">              &#123;\% else %&#125;</span></span><br><span class="line"><span class="language-xml">                <span class="tag">&lt;<span class="name">span</span> <span class="attr">itemprop</span>=<span class="string">&quot;name&quot;</span>&gt;</span>&#123;&#123; post.title | default(__(&#x27;post.untitled&#x27;)) &#125;&#125;<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">              &#123;\% endif %&#125;</span></span><br><span class="line"><span class="language-xml">            <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        &#123;\% endif %&#125;</span></span><br><span class="line"><span class="language-xml">      &lt;/&#123;\% if theme.seo %&#125;h3&#123;\% else %&#125;h2&#123;\% endif %&#125;&gt;</span></span><br><span class="line"><span class="language-xml"></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;post-meta&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">time</span> <span class="attr">class</span>=<span class="string">&quot;post-time&quot;</span> <span class="attr">itemprop</span>=<span class="string">&quot;dateCreated&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">              <span class="attr">datetime</span>=<span class="string">&quot;&#123;&#123; moment(post.date).format() &#125;&#125;&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">              <span class="attr">content</span>=<span class="string">&quot;&#123;&#123; date(post.date, config.date_format) &#125;&#125;&quot;</span> &gt;</span></span></span><br><span class="line"><span class="language-xml">          &#123;&#123; date(post.date, &#x27;MM-DD&#x27;) &#125;&#125;</span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;/<span class="name">time</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">header</span>&gt;</span></span></span><br><span class="line">  &lt;/article&gt;</span><br><span class="line"></span><br><span class="line">&#123;\% endmacro %&#125;</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>技术</category>
      </categories>
      <tags>
        <tag>博客</tag>
        <tag>记录</tag>
      </tags>
  </entry>
</search>
